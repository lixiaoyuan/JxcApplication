<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False" />
    <dxc:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Template}" TargetType="{x:Type dxr:RibbonApplicationButtonControl}">
        <!---->
        <dxr:RibbonCheckedBorderControl x:Name="PART_Border" UseAppFocusValue="True" AppFocusValue="{Binding Path=(dxr:RibbonNavigationManager.IsSelected), RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}}" Template="{TemplateBinding ActualBorderTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" IsTabStop="False">
            <Grid>
                <dxc:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}">
                    <Image Source="{Binding Path=Ribbon.ActualApplicationButtonLargeIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" />
                </dxc:PixelSnapper>
                <Grid Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dxc:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0">

                        <Image Source="{Binding Path=Ribbon.ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,1,0,0" Stretch="None" />
                    </dxc:PixelSnapper>
                    <Grid Grid.Column="1" Visibility="{Binding Path=Ribbon.ActualIsApplicationButtonTextVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                        <ContentControl Name="ContentControl" Style="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}}" Content="{Binding Path=Ribbon.ApplicationButtonText, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" />
                    </Grid>
                </Grid>
            </Grid>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentControl" Property="Style" Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ContentControl" Property="Style" Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=CheckedTextStyle}}" />
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsLeftButtonPressed}" Value="True">
                <Setter TargetName="ContentControl" Property="Style" Value="{DynamicResource {dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>