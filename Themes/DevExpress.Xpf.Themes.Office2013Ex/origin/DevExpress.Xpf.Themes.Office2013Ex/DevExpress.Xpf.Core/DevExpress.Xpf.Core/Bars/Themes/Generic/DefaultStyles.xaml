<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxbc="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <Style x:Key="SubMenuBarControlDefaultStyle" TargetType="{x:Type dxb:SubMenuBarControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="DropIndicatorStyle" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=DropIndicatorStyle}}" />
        <Setter Property="GlyphPadding" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphPadding}}" />
        <Setter Property="MenuHeaderStatesHolder" Value="{DynamicResource {dxbt:BarItemLinkMenuHeaderThemeKey ResourceKey=StatesHolder}}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="RadialMenuControlDefaultStyle" TargetType="{x:Type dxb:RadialMenuControl}">        
        <Setter Property="Template" Value="{DynamicResource {dxbt:RadialMenuControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="ToolTipVerticalOffset" Value="-4" />
        <Setter Property="DefaultGlyphTemplate" Value="{DynamicResource {dxbt:RadialMenuControlThemeKey ResourceKey=DefaultGlyphTemplate}}" />
        <Setter Property="DefaultBackButtonGlyphTemplate" Value="{DynamicResource {dxbt:RadialMenuControlThemeKey ResourceKey=DefaultBackButtonGlyphTemplate}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="RadialMenuLevelControlDefaultStyle" TargetType="{x:Type dxb:RadialMenuLevelControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxbt:RadialMenuLevelControlThemeKey ResourceKey=ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:RadialMenuLevelControlThemeKey ResourceKey=ControlTemplate}}" />        
    </Style>
    <Style x:Key="MenuBarControlDefaultStyle" TargetType="{x:Type dxb:MenuBarControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:MenuBarControlThemeKey ResourceKey=ControlTemplate}}" />
    </Style>

    <Style x:Key="BarControlDefaultStyle" TargetType="{x:Type dxb:BarControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="DropIndicatorStyle" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DropIndicatorStyle}}" />
    </Style>
    <Style x:Key="BarContainerControlDefaultStyle" TargetType="{x:Type dxb:BarContainerControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="dxb:BarContainerControlTemplateProvider.BorderTemplate" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=BorderTemplate}}" />
        <Setter Property="dxb:BarContainerControlTemplateProvider.EmptyBorderTemplate" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=EmptyBorderTemplate}}" />
        <Setter Property="dxb:BarContainerControlTemplateProvider.BackgroundTemplate" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=BackgroundTemplate}}" />
        <Setter Property="dxb:BarContainerControlTemplateProvider.HorizontalPadding" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=HorizontalPadding}}" />
        <Setter Property="dxb:BarContainerControlTemplateProvider.VerticalPadding" Value="{DynamicResource {dxbt:BarContainerControlThemeKey ResourceKey=VerticalPadding}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Padding" Value="{Binding ActualPadding, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <Style x:Key="FloatingBarPopupDefaultStyle" TargetType="{x:Type dxb:FloatingBarPopup}">
        <Setter Property="StaysOpen" Value="True" />
        <Setter Property="Placement" Value="Relative" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="AllowsTransparency" Value="True" />
    </Style>
    <Style x:Key="FloatingBarPopupContentControlDefaultStyle" TargetType="{x:Type dxb:FloatingBarPopupContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=ContentTemplate}}" />
        <Setter Property="DragWidgetStyle" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=DragWidgetStyle}}" />
        <Setter Property="SizeGripStyle" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripStyle}}" />
        <Setter Property="CloseButtonStyle" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}}" />
        <Setter Property="QuickCustomizationButtonStyle" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonStyle}}" />
        <Setter Property="CaptionStyle" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}}" />
    </Style>

    <Style x:Key="ItemBorderControlDefaultStyle" TargetType="{x:Type dxb:ItemBorderControl}">
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="BarItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarItemLinkControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxb:BarItemLinkControl}">
                    <dxc:LayoutTransformPanel x:Name="PART_TransformPanel" Orientation="Vertical" Clockwise="False">
                            <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" />
                    </dxc:LayoutTransformPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="RotateWhenVertical" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_TransformPanel" Property="Orientation" Value="Horizontal" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="RotateWhenVertical" Value="True" />
                            </MultiTrigger.Conditions>                            
                            <Setter TargetName="PART_LayoutPanel" Property="GlyphRenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                                </Setter.Value>
                            </Setter>                            
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BarButtonItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarButtonItemLinkControl}" BasedOn="{StaticResource BarItemLinkControlDefaultStyle}">
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BarSubItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarSubItemLinkControl}" BasedOn="{StaticResource BarItemLinkControlDefaultStyle}">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxb:BarItemLinkControl}">
                        <dxc:LayoutTransformPanel x:Name="PART_TransformPanel" Orientation="Vertical" Clockwise="False">
                            <Grid>
                                <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" />
                                <dxc:LayoutTransformPanel x:Name="PART_PopupTransformPanel" Orientation="Vertical" Clockwise="False">
                                    <Border x:Name="PART_PopupPlacementTarget">
                                        <dxb:PopupMenuBase x:Name="PART_Popup" />
                                    </Border>
                                </dxc:LayoutTransformPanel>
                            </Grid>                            
                        </dxc:LayoutTransformPanel>                              
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="RotateWhenVertical" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_TransformPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="PART_LayoutPanel" Property="ArrowTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="RotateWhenVertical" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_PopupTransformPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="PART_LayoutPanel" Property="GlyphRenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_LayoutPanel" Property="ArrowTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-180" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BarSplitButtonItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarSplitButtonItemLinkControl}" BasedOn="{StaticResource BarItemLinkControlDefaultStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxb:BarItemLinkControl}">
                    <dxc:LayoutTransformPanel x:Name="PART_TransformPanel" Orientation="Vertical" Clockwise="False">
                        <Grid>
                            <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" />
                            <dxc:LayoutTransformPanel x:Name="PART_PopupTransformPanel" Orientation="Vertical" Clockwise="False">
                                <dxc:NonLogicalDecorator x:Name="PART_PopupPlacementTarget" />
                            </dxc:LayoutTransformPanel>
                        </Grid>
                    </dxc:LayoutTransformPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="RotateWhenVertical" Value="False" />
                            </MultiTrigger.Conditions>                            
                            <Setter TargetName="PART_TransformPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="PART_LayoutPanel" Property="ArrowTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical" />
                                <Condition Property="RotateWhenVertical" Value="True" />
                            </MultiTrigger.Conditions>                            
                            <Setter TargetName="PART_PopupTransformPanel" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="PART_LayoutPanel" Property="GlyphRenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_LayoutPanel" Property="ArrowTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-180" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BarCheckItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarCheckItemLinkControl}" BasedOn="{StaticResource BarItemLinkControlDefaultStyle}">
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BarEditItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarEditItemLinkControl}" BasedOn="{StaticResource BarItemLinkControlDefaultStyle}">
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />    
    <Style x:Key="BarStaticItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarStaticItemLinkControl}" BasedOn="{StaticResource BarItemLinkControlDefaultStyle}">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <ContentControl dxc:FocusHelper2.Focusable="False" Template="{DynamicResource {dxbt:BarStaticItemThemeKey ResourceKey=BorderTemplate}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                        <Border Padding="{Binding ActualBorderPadding, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:LayoutTransformPanel x:Name="PART_TransformPanel" Orientation="Vertical" Clockwise="False">
                                    <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" />
                            </dxc:LayoutTransformPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderPadding" Value="{DynamicResource {dxbt:BarStaticItemThemeKey ResourceKey=BorderPadding}}" />
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BarItemLinkSeparatorControlDefaultStyle" TargetType="{x:Type dxb:BarItemLinkSeparatorControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.Template" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=Template}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInMenu" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InMenuTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonStatusBarLeftPart" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonStatusBarLeftPartTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonStatusBarRightPart" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonStatusBarRightPartTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInStatusBar" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InStatusBarTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonPageGroup" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonPageGroupTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonPageHeader" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonPageHeaderTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonQuickAccessToolbar" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonQuickAccessToolbarTemplate}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonQuickAccessToolbarFooter" Value="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonQuickAccessToolbarFooterTemplate}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="#FF7B7B7B" />
    </Style>

    <Style x:Key="BarItemLinkMenuHeaderControlDefaultStyle" TargetType="{x:Type dxb:BarItemLinkMenuHeaderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemLinkMenuHeaderThemeKey ResourceKey=Template}}" />        
    </Style>

    <Style x:Key="BarSplitCheckItemLinkControlDefaultStyle" TargetType="{x:Type dxb:BarSplitCheckItemLinkControl}" BasedOn="{StaticResource BarSplitButtonItemLinkControlDefaultStyle}">
        <Style.Triggers>
            <Trigger Property="ContainerType" Value="RadialMenu">
                <Setter Property="Template" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BarItemDragElementContentDefaultStyle" TargetType="{x:Type dxbc:BarItemDragElementContent}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=DragElementTemplate}}" />
    </Style>
    <Style x:Key="BarDragElementPopupDefaultStyle" TargetType="{x:Type dxbc:BarDragElementPopup}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Placement" Value="Relative" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="CursorOffset" Value="8,8" />
    </Style>

    <Style x:Key="BarPopupBaseDefaultStyle" TargetType="{x:Type dxb:BarPopupBase}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="MinWidth" Value="80" />
    </Style>
    <Style x:Key="RadialContextMenuDefaultStyle" TargetType="{x:Type dxb:RadialContextMenu}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Placement" Value="Custom" />
        <Setter Property="HorizontalOffset" Value="8" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="PopupContainerDefaultStyle" TargetType="{x:Type dxb:PopupContainer}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:PopupControlContainerThemeKey ResourceKey=ControlTemplate}}" />
    </Style>
    <Style x:Key="BarPopupBorderControlDefaultStyle" TargetType="{x:Type dxb:BarPopupBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:PopupControlContainerThemeKey ResourceKey=BorderTemplate}}" />        
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,0,0,20" />
    </Style>

    <Style x:Key="RadialMenuPopupBorderControlDefaultStyle" TargetType="{x:Type dxb:RadialMenuPopupBorderControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxb:RadialMenuPopupBorderControl}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OfficeTabletItemsControlDefaultStyle" TargetType="{x:Type dxb:OfficeTabletItemsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:OfficeTabletItemsControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="FrameworkElement">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform />
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxb:ExpandablePanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AddRemoveAnimationDuration" Value="0:0:0.3" />
        <Setter Property="AddRemoveAnimationAccelerationRatio" Value="0.5" />
        <Setter Property="AddRemoveAnimationDecelerationRation" Value="0.2" />
        <Setter Property="SizeAnimationDuration" Value="0:00:00.2" />
        <Setter Property="SizeAnimationAccelerationRatio" Value="0.3" />
        <Setter Property="SizeAnimationDecelerationRation" Value="0.3" />
        <Setter Property="SizeAnimationBeginTime" Value="0:0:0.2" />
    </Style>
    <Style x:Key="BarItemListDefaultStyle" TargetType="{x:Type dxbc:BarItemList}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{DynamicResource {dxt:ListBoxThemeKey ResourceKey=ControlTemplate}}">
        </Setter>
    </Style>
    <Style x:Key="BarItemListItemDefaultStyle" TargetType="{x:Type dxbc:BarItemListItem}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="3,0,3,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=BarListItemTemplate}}" />
    </Style>

    <Style x:Key="GalleryControlDefaultStyle" TargetType="{x:Type dxb:GalleryControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:GalleryControlThemeKey ResourceKey=StandaloneControlTemplate}}" />
        <Setter Property="DefaultItemMargin" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultItemMargin}}" />
        <Setter Property="DefaultItemGlyphMargin" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultGlyphMargin}}" />
        <Setter Property="DefaultItemCaptionMargin" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultCaptionMargin}}" />
        <Setter Property="DefaultItemDescriptionMargin" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultDescriptionMargin}}" />
        <Setter Property="DefaultGroupCaptionMargin" Value="{DynamicResource {dxbt:GalleryItemGroupControlThemeKey ResourceKey=DefaultGroupCaptionMargin}}" />
        <Setter Property="DefaultGroupItemsMargin" Value="{DynamicResource {dxbt:GalleryItemGroupControlThemeKey ResourceKey=DefaultGroupItemsMargin}}" />
        <Setter Property="ItemCaptionTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultItemCaptionTextStyle}}" />
        <Setter Property="ItemDescriptionTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultItemDescriptionTextStyle}}" />
        <Setter Property="GroupCaptionTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultGroupCaptionTextStyle}}" />
        <Setter Property="NormalFilterCaptionTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultNormalFilterCaptionTextStyle}}" />
        <Setter Property="SelectedFilterCaptionTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultSelectedFilterCaptionTextStyle}}" />
        <Setter Property="HintTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultHintTextStyle}}" />
        <Setter Property="HintCaptionTextStyle" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultHintCaptionTextStyle}}" />
        <Setter Property="DefaultItemGlyphBorderTemplate" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=StandaloneGlyphBorderTemplate}}" />
        <Setter Property="DefaultItemBorderTemplate" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=StandaloneBorderTemplate}}" />
        <Setter Property="DefaultItemControlTemplate" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultControlTemplate}}" />
        <Setter Property="DefaultItemGlyphBorderPadding" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=DefaultGlyphBorderPadding}}" />
        <Setter Property="DefaultGroupCaptionControlTemplate" Value="{DynamicResource {dxbt:GalleryItemGroupControlThemeKey ResourceKey=CaptionTemplate}}" />
        <Setter Property="DefaultFilterControlTemplate" Value="{DynamicResource {dxbt:GalleryControlThemeKey ResourceKey=StandaloneCaptionTemplate}}" />
        <Setter Property="ItemCaptionTextStyleSelector" Value="{DynamicResource {dxbt:GalleryControlThemeKey ResourceKey=StandaloneCaptionTextStyleSelector}}" />
        <Setter Property="ItemDescriptionTextStyleSelector" Value="{DynamicResource {dxbt:GalleryControlThemeKey ResourceKey=StandaloneDescriptionTextStyleSelector}}" />
    </Style>
    <Style x:Key="GalleryItemControlDefaultStyle" TargetType="{x:Type dxb:GalleryItemControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="GalleryItemGroupControlDefaultStyle" TargetType="{x:Type dxb:GalleryItemGroupControl}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxbt:GalleryItemGroupControlThemeKey ResourceKey=ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:GalleryItemGroupControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="ItemsSource" Value="{Binding Path=Group.Items, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="GalleryItemGroupsControlDefaultStyle" TargetType="{x:Type dxb:GalleryItemGroupsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:GalleryItemGroupsControlThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxbt:GalleryItemGroupsControlThemeKey ResourceKey=ItemsPanelTemplate}}" />
    </Style>
    <Style x:Key="GalleryItemHoverToolTipDefaultStyle" TargetType="{x:Type dxb:GalleryItemHoverToolTip}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:GalleryItemControlThemeKey ResourceKey=HoverToolTipTemplate}}" />
    </Style>
    <Style x:Key="GalleryDefaultStyle" TargetType="{x:Type dxb:Gallery}" />

    <Style x:Key="GalleryItemGroupDefaultStyle" TargetType="{x:Type dxb:GalleryItemGroup}" />

    <Style x:Key="TextSplitterControlDefaultStyle" TargetType="{x:Type dxb:TextSplitterControl}">        
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="GlyphSideControlDefaultStyle" TargetType="{x:Type dxb:GlyphSideControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:GlyphSideControlThemeKey ResourceKey=Template}}" />        
    </Style>
    <Style x:Key="PopupMenuColumnSplitterDefaultStyle" TargetType="{x:Type dxb:PopupMenuColumnSplitter}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=PopupMenuColumnSplitterTemplate}}" />
    </Style>
    <Style x:Key="BarManagerThemeDependentValuesProviderDefaultStyle" TargetType="{x:Type dxb:BarManagerThemeDependentValuesProvider}">
        <Setter Property="ToolbarCaptionEditorWindowFloatSize" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=CaptionEditorFloatSize}}" />
        <Setter Property="CustomizationFormFloatSize" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=CustomizationFormFloatSize}}" />
        <Setter Property="CustomizationFormMinWidth" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=CustomizationFormMinWidth}}" />
        <Setter Property="CustomizationFormMinHeight" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=CustomizationFormMinHeight}}" />        
        <Setter Property="ColorizeGlyph" Value="{DynamicResource {dxbt:CustomizationThemeKey ResourceKey=ColorizeGlyph}}" />        
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.ToolBarControlBase}" TargetType="{x:Type dxb:ToolBarControlBase}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template" Value="{DynamicResource {dxbt:ToolBarThemeKey ResourceKey=Template}}" />
    </Style>
</ResourceDictionary>