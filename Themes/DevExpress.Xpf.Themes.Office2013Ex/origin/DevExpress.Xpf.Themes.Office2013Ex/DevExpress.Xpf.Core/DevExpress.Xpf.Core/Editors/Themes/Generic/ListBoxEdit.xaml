<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <!--PROCESS SETTERS WITH BINDING-->

    <!--BEGIN TOSLONLY REPLACE ' BasedOn="ListBox"''-->
    <Style x:Key="BaseListBoxStyle" TargetType="{x:Type dxep:EditorListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="DisplayMemberPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).DisplayMemberPath, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ItemTemplate" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplate, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ItemsPanel" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemsPanel, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SelectionMode" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectionMode, RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource Self}}" />
        <Setter Property="AllowItemHighlighting" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource Self}}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template" Value="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=Template}}" />
        <Setter Property="TextSearch.TextPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(TextSearch.TextPath), RelativeSource={RelativeSource Self}}" />
        <!--BEGIN WPF-->
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ItemTemplateSelector" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplateSelector, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.CanContentScroll), RelativeSource={RelativeSource Self}}" />
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="dxeh:ControlHelper.ClearDefaultStyleKey" Value="True"/>
        ONLY SL-->
    </Style>
    <!--END TOSLONLY REPLACE ' BasedOn="ListBox"''-->

    <Style BasedOn="{StaticResource BaseListBoxStyle}" x:Key="{dxet:ListBoxEditThemeKey ResourceKey=ListBoxInplaceStyle}" TargetType="{x:Type dxep:EditorListBox}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <!--BEGIN WPF-->
        <Setter Property="IsHitTestVisible" Value="False" />
        <!--END WPF-->
    </Style>

    <Style BasedOn="{StaticResource BaseListBoxStyle}" x:Key="{dxet:ListBoxEditThemeKey ResourceKey=ListBoxStyle}" TargetType="{x:Type dxep:EditorListBox}">
    </Style>

    <ControlTemplate x:Key="{dxet:ListBoxEditThemeKey ResourceKey=DisplayTemplate}">
        <!--ONLY SL
        <Grid>
        ONLY SL-->
            <dxep:EditorListBox x:Name="PART_Editor" Style="{DynamicResource {dxet:ListBoxEditThemeKey ResourceKey=ListBoxInplaceStyle}}" />
        <!--ONLY SL
            <Border Background="Transparent"/>
        </Grid>
        ONLY SL-->
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ListBoxEditThemeKey ResourceKey=EditTemplate}">
        <dxep:EditorListBox x:Name="PART_Editor" Style="{DynamicResource {dxet:ListBoxEditThemeKey ResourceKey=ListBoxStyle}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ListBoxEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ListBoxEdit}">
        <ContentControl Template="{TemplateBinding ActualBorderTemplate}" x:Name="PART_Root" dx:FocusHelper2.Focusable="False">
            <!--ONLY SL
            <dxeh:ControlHelper.ClearDefaultStyleKey>
                <sys:Boolean>True</sys:Boolean>
            </dxeh:ControlHelper.ClearDefaultStyleKey>
            ONLY SL-->
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dxep:ErrorControl x:Name="PART_ErrorPresenter" />
                <dxep:EditorControl Grid.Column="1" x:Name="PART_Content" Template="{TemplateBinding ActualEditorControlTemplate}" />
            </Grid>
        </ContentControl>
    </ControlTemplate>

</ResourceDictionary>