<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <!--PROCESS SETTERS WITH BINDING-->
    <!--BEGIN TOSLONLY REPLACE 'PART_ContentHost'ContentElement'-->

    <dxei:HorizontalContentAlignmentToTextAlignmentConverter x:Key="HorizontalContentAlignmentToTextAlignmentConverter" />
    <dxei:TextBoxPaddingConverter x:Key="TextEditTextBoxPaddingConverter" />

    <Style x:Key="BaseTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="{Binding HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}" />
        <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="TextWrapping" Value="{Binding TextWrapping}" />
        <Setter Property="TextDecorations" Value="{Binding TextDecorations}" />  
        <Setter Property="Padding" Value="{Binding Padding}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--BEGIN WPF-->
        <Setter Property="Background" Value="{Binding Background}" />
        <Setter Property="Focusable" Value="{Binding Focusable}" />
        <Setter Property="TextTrimming" Value="{Binding TextTrimming}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="{Binding IsTabStop}" />
        <!--END WPF-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsNullTextVisible}" Value="true">
                <Setter Property="Opacity" Value="0.35" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.35" />
            </Trigger>
        </Style.Triggers> 
    </Style>
    <Style x:Key="BaseTextBlockInplaceStyle" TargetType="{x:Type TextBlock}">
        <!--BEGIN WPF-->
        <Setter Property="UseLayoutRounding" Value="False" />
        <!--END WPF-->
    </Style>

    <!--BEGIN TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
    <Style x:Key="BaseTextStyle" TargetType="{x:Type TextBox}">
        <!--END TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
        <Setter Property="MaxLength" Value="{Binding MaxLength}" />
        <Setter Property="IsTabStop" Value="{Binding IsTabStop}" />
        <Setter Property="Focusable" Value="{Binding Focusable}" />
        <Setter Property="TextWrapping" Value="{Binding TextWrapping}" />
        <Setter Property="Background" Value="{Binding Background}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {dxet:TextEditThemeKey ResourceKey=CaretBrush}}" />
        <Setter Property="Padding" Value="{Binding Padding}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="AcceptsReturn" Value="{Binding AcceptsReturn}" />
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding VerticalScrollBarVisibility}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding HorizontalScrollBarVisibility}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <!--BEGIN TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <!--END TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="True" Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextEditTextBoxPaddingConverter}}" dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}">
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--BEGIN WPF-->
        <Setter Property="AcceptsTab" Value="{Binding AcceptsTab}" />
        <Setter Property="CharacterCasing" Value="{Binding CharacterCasing}" />
        <Setter Property="ContextMenu" Value="{Binding ContextMenu}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{Binding Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment}" />
        <Setter Property="TextDecorations" Value="{Binding TextDecorations}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment}" />
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="SelectionBackground" Value="{StaticResource TextEditSelectionBackground}" />
        <Setter Property="SelectionForeground" Value="{StaticResource TextEditSelectionForeground}" />
        <Setter Property="TextAlignment" Value="{Binding HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}"/>
        <Setter Property="dxeh:ControlHelper.ClearDefaultStyleKey" Value="True"/>
        <Setter Property="VerticalAlignment2" Value="{Binding VerticalContentAlignment}"/>
        ONLY SL-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsNullTextVisible}" Value="true">
                <Setter Property="Foreground" Value="{Binding Path=NullTextForeground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--BEGIN TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
    <Style x:Key="BaseTextInplaceStyle" TargetType="{x:Type TextBox}">
        <!--END TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
        <Setter Property="MaxLength" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength}" />
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {dxet:TextEditThemeKey ResourceKey=CaretBrush}}" />
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}" />
        <Setter Property="IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop}" />
        <Setter Property="Focusable" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Focusable}" />
        <Setter Property="IsReadOnly" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly}" />
        <Setter Property="AcceptsReturn" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).AcceptsReturn}" />
        <Setter Property="TextWrapping" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).TextWrapping}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}" />
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalScrollBarVisibility}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalScrollBarVisibility}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <!--BEGIN TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <!--END TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->
                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="True" Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextEditTextBoxPaddingConverter}}" dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}" Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsNullTextVisible}" Value="true">
                            <Setter Property="Opacity" Value="0.35" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--BEGIN WPF-->
        <Setter Property="AcceptsTab" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).AcceptsTab}" />
        <Setter Property="CharacterCasing" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).CharacterCasing}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ContextMenu}" />
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment}" />
        <Setter Property="TextDecorations" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).TextDecorations}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}" />
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="SelectionBackground" Value="{StaticResource TextEditSelectionBackground}" />
        <Setter Property="SelectionForeground" Value="{StaticResource TextEditSelectionForeground}" />
        <Setter Property="dxeh:ControlHelper.ClearDefaultStyleKey" Value="True"/>
        <Setter Property="VerticalAlignment2" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}"/>
        <Setter Property="TextAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}"/>
        ONLY SL-->
    </Style>
    <!--END TOSLONLY REPLACE 'PART_ContentHost'ContentElement'-->
</ResourceDictionary>