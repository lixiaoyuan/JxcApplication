<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/charts">
    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{dx:ChartsResource themes/Generic/ToolTip.xaml}" />
        <ResourceDictionary Source="{dx:ChartsResource themes/Generic/LegendMarker.xaml}" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->
    <local:BrushOverlayConverter x:Key="brushOverlayConverter" />
    <local:RectsListToGeometryConverter x:Key="rectsListToGeometryConverter" />
    <Style x:Key="Axis2DStyle" TargetType="{x:Type local:Axis2D}">
        <Setter Property="Brush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=AxisBrush}}" />
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=Axis2DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=MinorGridLineBrush}}" />
        <Setter Property="MinorCount" Value="4" />
        <Setter Property="CrosshairLabelTemplate" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=CrosshairAxisLabelPresentationTemplate}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Axis2DPresentation}" TargetType="{x:Type local:Axis2DPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Axis2DPresentation}">
                    <Grid>
                        <Path x:Name="PART_AxisGeometry" RenderTransformOrigin="0.5,0.5" Fill="{Binding Path=Axis.Brush, RelativeSource={RelativeSource TemplatedParent}}" Data="{Binding Path=AxisItem.AxisGeometry, Converter={StaticResource rectsListToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{Binding Path=AxisItem.GeometryTransform, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Path x:Name="PART_MajorTickmarksGeometry" RenderTransformOrigin="0.5,0.5" Fill="{Binding Path=Axis.Brush, RelativeSource={RelativeSource TemplatedParent}}" Data="{Binding Path=AxisItem.MajorTickmarksGeometry, Converter={StaticResource rectsListToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{Binding Path=AxisItem.GeometryTransform, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Path x:Name="PART_MinorTickmarksGeometry" RenderTransformOrigin="0.5,0.5" Fill="{Binding Path=Axis.Brush, RelativeSource={RelativeSource TemplatedParent}}" Data="{Binding Path=AxisItem.MinorTickmarksGeometry, Converter={StaticResource rectsListToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{Binding Path=AxisItem.GeometryTransform, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.AxisX2D}" TargetType="{x:Type local:AxisX2D}" BasedOn="{StaticResource Axis2DStyle}">
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.AxisY2D}" TargetType="{x:Type local:AxisY2D}" BasedOn="{StaticResource Axis2DStyle}">
        <Setter Property="Interlaced" Value="true" />
        <Setter Property="GridLinesVisible" Value="True" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SecondaryAxisX2D}" TargetType="{x:Type local:SecondaryAxisX2D}" BasedOn="{StaticResource Axis2DStyle}">
        <Setter Property="Alignment" Value="Far" />
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SecondaryAxisY2D}" TargetType="{x:Type local:SecondaryAxisY2D}" BasedOn="{StaticResource Axis2DStyle}">
        <Setter Property="Alignment" Value="Far" />
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="CircularAxisY2DStyle" TargetType="local:CircularAxisY2D">
        <Setter Property="Brush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=AxisBrush}}" />
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=Axis2DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=MinorGridLineBrush}}" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="MinorCount" Value="4" />
    </Style>
    <Style x:Key="CircularAxisX2DStyle" TargetType="local:CircularAxisX2D">
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=Axis2DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=MinorGridLineBrush}}" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="MinorCount" Value="4" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.RadarAxisY2D}" TargetType="local:RadarAxisY2D" BasedOn="{StaticResource CircularAxisY2DStyle}"></Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.PolarAxisY2D}" TargetType="local:PolarAxisY2D" BasedOn="{StaticResource CircularAxisY2DStyle}"></Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.RadarAxisX2D}" TargetType="local:RadarAxisX2D" BasedOn="{StaticResource CircularAxisX2DStyle}"></Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.PolarAxisX2D}" TargetType="local:PolarAxisX2D" BasedOn="{StaticResource CircularAxisX2DStyle}"></Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ConstantLine}" TargetType="{x:Type local:ConstantLine}">
        <Setter Property="Brush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=ConstantLineBrush}}" />
        <Setter Property="LegendMarkerTemplate" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=ConstantLineLegendMarkerTemplate}}" />
        <Setter Property="ElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Line x:Name="PART_Line" Visibility="{Binding Visibility, RelativeSource={RelativeSource TemplatedParent}}" X1="{Binding Offset}" X2="{Binding Offset}" Y2="{Binding Length}" StrokeDashArray="{Binding DashArray, Converter={StaticResource strokeDashArrayConverter}}" StrokeDashOffset="{Binding DashOffset}" Stroke="{Binding Path=ConstantLine.Brush}" StrokeThickness="{Binding Path=ConstantLine.ActualLineStyle.Thickness}" StrokeDashCap="{Binding Path=ConstantLine.ActualLineStyle.DashCap}" StrokeLineJoin="{Binding Path=ConstantLine.ActualLineStyle.LineJoin}" StrokeMiterLimit="{Binding Path=ConstantLine.ActualLineStyle.MiterLimit}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ConstantLinePresentation}" TargetType="{x:Type local:ConstantLinePresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ConstantLinePresentation}">
                    <Grid>
                        <ContentPresenter Content="{Binding Path=ConstantLineItem, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=ConstantLineItem.ConstantLine.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        <local:SelectionGeometryControl Geometry="{Binding Path=ConstantLineItem.SelectionGeometry, RelativeSource={RelativeSource TemplatedParent}}" IsSelected="{Binding Path=ConstantLine.SelectionInfo.IsSelected, RelativeSource={RelativeSource TemplatedParent}}" IsHighlighted="{Binding Path=ConstantLine.SelectionInfo.IsHighlighted, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StripPresentation}" TargetType="{x:Type local:StripPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StripPresentation}">
                    <Canvas>
                        <Rectangle x:Name="PART_Rect" StrokeThickness="1" Canvas.Left="{Binding Path=StripItem.Offset, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=StripItem.Thickness, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=StripItem.Length, RelativeSource={RelativeSource TemplatedParent}}" Fill="{Binding Path=Strip.Brush, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{Binding Path=Strip.BorderColor, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <local:SelectionGeometryControl Geometry="{Binding Path=StripItem.SelectionGeometry, RelativeSource={RelativeSource TemplatedParent}}" IsSelected="{Binding Path=Strip.SelectionInfo.IsSelected, RelativeSource={RelativeSource TemplatedParent}}" IsHighlighted="{Binding Path=Strip.SelectionInfo.IsHighlighted, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Strip}" TargetType="{x:Type local:Strip}">
        <Setter Property="Brush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=StripBrush}}" />
        <Setter Property="BorderColor" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=StripBorderColor}}" />
        <Setter Property="LegendMarkerTemplate" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=StripLegendMarkerTemplate}}" />
    </Style>
</ResourceDictionary>