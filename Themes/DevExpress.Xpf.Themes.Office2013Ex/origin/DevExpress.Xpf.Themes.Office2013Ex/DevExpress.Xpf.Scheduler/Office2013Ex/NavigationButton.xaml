<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler" xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys" xmlns:dxschd="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <dxsch:SchedulerStringIdConverter x:Key="SchedulerStringIdConverter" />
    <ControlTemplate TargetType="{x:Type dxschd:VisualNavigationButton}" x:Key="NavigationButtonTemplate">
        <Grid x:Name="Root" Background="#00000000" Width="24" MinHeight="178" SnapsToDevicePixels="True" cs:Name="Grid_0001">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DirectionStates">
                    <VisualState x:Name="Backward" />
                    <VisualState x:Name="Forward">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="border">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-90" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="text">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>-72,-12,-96,-16</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="defaultState">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius>7,0,0,7</CornerRadius>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="mouseOverState">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius>7,0,0,7</CornerRadius>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform)" Storyboard.TargetName="arrowPath">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="180" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentGrid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="mouseOverState">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="defaultState">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="defaultState">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="mouseOverState">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="defaultState" Background="#FFCDE6F7" BorderBrush="#FF99C8E9" BorderThickness="1" CornerRadius="0,7,7,0" cs:Name="Border_0002" />
            <Border x:Name="mouseOverState" Background="#FFF1F9FD" BorderBrush="#FF99C8E9" BorderThickness="1" CornerRadius="0,7,7,0" Visibility="Collapsed" cs:Name="Border_0004" />
            <Grid Margin="2,0,4,0" x:Name="contentGrid" SnapsToDevicePixels="True" UseLayoutRounding="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Path x:Name="arrowPath" Stretch="Fill" Fill="#FF444444" Data="F1 M 97,227L 98,227L 98,237L 97,237L 97,227 Z M 99,232L 103,228L 103,230L 101,232L 103,234L 103,236L 99,232 Z " HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Height="10" Margin="0,16" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" cs:Name="Path_0001" />
                <Border x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform Angle="90" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Border.RenderTransform>
                    <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="#FF000000" Margin="-96,-16,-72,-12" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="TextBlock_0001" />
                </Border>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type dxschd:VisualNavigationButton}" x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonPrevStyle}">
        <Setter Property="Template" Value="{StaticResource NavigationButtonTemplate}" />
        <Setter Property="Direction" Value="Backward" />
        <Setter Property="Content" Value="{Binding Source={StaticResource SchedulerStringIdConverter}, ConverterParameter=Caption_PrevAppointment, Converter={StaticResource SchedulerStringIdConverter}}" />
    </Style>
    <Style TargetType="{x:Type dxschd:VisualNavigationButton}" x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonNextStyle}">
        <Setter Property="Template" Value="{StaticResource NavigationButtonTemplate}" />
        <Setter Property="Direction" Value="Forward" />
        <Setter Property="Content" Value="{Binding Source={StaticResource SchedulerStringIdConverter}, ConverterParameter=Caption_NextAppointment, Converter={StaticResource SchedulerStringIdConverter}}" />
    </Style>
    <DataTemplate x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonsPair}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,0,0">
            <dxschd:VisualNavigationButton HorizontalAlignment="Left" VerticalAlignment="Stretch" Style="{Binding Path=View.NavigationButtonPrevStyle}" ButtonInfo="{Binding PrevNavButtonInfo}" />
            <dxschd:VisualNavigationButton HorizontalAlignment="Right" VerticalAlignment="Stretch" Style="{Binding Path=View.NavigationButtonNextStyle}" ButtonInfo="{Binding NextNavButtonInfo}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxscht:WeekViewThemeKey ResourceKey=NavigationButtonsPairGroupByResource}">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="-1,0,1,0">
            <dxschd:VisualNavigationButton HorizontalAlignment="Left" VerticalAlignment="Stretch" Style="{Binding Path=View.NavigationButtonPrevStyle}" ButtonInfo="{Binding PrevNavButtonInfo}" />
            <dxschd:VisualNavigationButton HorizontalAlignment="Right" VerticalAlignment="Stretch" Style="{Binding Path=View.NavigationButtonNextStyle}" ButtonInfo="{Binding NextNavButtonInfo}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>