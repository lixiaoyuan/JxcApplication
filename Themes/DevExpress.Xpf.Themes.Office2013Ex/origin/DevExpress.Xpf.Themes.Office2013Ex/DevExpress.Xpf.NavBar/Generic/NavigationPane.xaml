<!--ONLY SL<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v15.2" xmlns:dxn="clr-namespace:DevExpress.Xpf.NavBar" xmlns:dxb="clr-namespace:DevExpress.Xpf.Bars;assembly=DevExpress.Xpf.Core.v15.2" xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v15.2" xmlns:xpfCore="clr-namespace:DevExpress.Xpf.Core.WPFCompatibility;assembly=DevExpress.Xpf.Core.v15.2">ONLY SL--><!--BEGIN WPF--><ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar" xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v15.2" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors">
    
    <!--BEGIN WPF-->
    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupItemsTemplate}" TargetType="dxn:CollapsedActiveGroupItem">
            <dxn:CollapsedActiveGroupItemContentPresenter IsPressed="{TemplateBinding IsPressed}" IsSelected="{TemplateBinding IsChecked}" Style="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=ItemBackgroundStyle}}">
                <dxn:ImageAndTextContentPresenter x:Name="item" dx:FocusHelper2.Focusable="False" ImageFallbackSize="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ContextElement="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Content.Content, Converter={dxn:NavBarItemToSourceObjectConverter}, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=ItemContentTemplate}}" dxn:NavBarViewBase.ImageSettings="{Binding Content.ImageSettings, RelativeSource={RelativeSource TemplatedParent}}" dxn:NavBarViewBase.LayoutSettings="{Binding Content.LayoutSettings, RelativeSource={RelativeSource TemplatedParent}}" dxn:NavBarViewBase.DisplayMode="{Binding Content.DisplayMode, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" />
            </dxn:CollapsedActiveGroupItemContentPresenter>            
    </ControlTemplate>
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupItemsContainerStyle}" TargetType="ToggleButton">
        <Setter Property="Template" Value="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupItemsTemplate}}" />
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}" />
        <Setter Property="CommandTarget" Value="{Binding Path=CommandTarget}" />
        <Setter Property="dxn:NavBarViewBase.FontSettings" Value="{Binding Path=ActualFontSettings}" />
    </Style>
    <!--END WPF-->
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dxn:IsActiveToAnimationProgressConverter x:Key="IsActiveToAnimationProgressConverter" />
    <dxn:ShowMoreGroupsCommandProvider x:Key="ShowMoreGroupsCommandProvider" />
    <dxn:ShowFewerGroupsCommandProvider x:Key="ShowFewerGroupsCommandProvider" />
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ItemVisualStyleInPopup}" TargetType="dxn:NavBarItemControl">
        <Setter Property="FontSettings" Value="{Binding ActualFontSettings}" />
        <Setter Property="ImageSettings" Value="{Binding ActualImageSettings}" />
        <Setter Property="DisplayMode" Value="{Binding ActualDisplayMode}" />
        <Setter Property="LayoutSettings" Value="{Binding ActualLayoutSettings}" />
        <!--BEGIN WPF-->
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=ItemForegroundBrushInPopup}}" />
        <!--END WPF-->
    </Style>          
    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=GroupControlTemplate}" TargetType="dxn:NavBarGroupControl">
        <Grid>
            <ContentPresenter />
            <dxn:NavPaneFlyoutControl x:Name="PART_NavPaneFlyout" StaysOpen="True" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="0">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyoutSettings Placement="Top" />
                </dxe:FlyoutControl.Settings>
            </dxn:NavPaneFlyoutControl>
        </Grid>        
    </ControlTemplate>


    <ItemsPanelTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ButtonGroupControlItemsPanel}">
        <dxn:NavPaneGroupButtonPanel />
    </ItemsPanelTemplate>
    
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ButtonGroupControlStyle}" TargetType="dxn:NavPaneGroupButtonPanelControl">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=ButtonGroupControlItemsPanel}}" />   
    </Style>

    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=GroupButtonItemsContainerStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=GroupControlTemplate}}" />
    </Style>
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=OverflowGroupItemsContainerStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=GroupControlTemplate}}" />
    </Style>
    <Style x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelStyle}" TargetType="ContentControl">
    </Style>
    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=OverflowPanel}">
        <ItemsPresenter />
    </ControlTemplate>
    <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowStyle}" TargetType="dxn:NavPanePopup">
        <!--BEGIN WPF-->
        <Setter Property="AllowsTransparency" Value="true" />
        <!--END WPF-->
        <Setter Property="HorizontalOffset" Value="1" />
        <Setter Property="Placement" Value="Right" />
    </Style>
    <!--BEGIN WPF-->
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGruopItemsControlStyle}" TargetType="dxn:CollapsedActiveGroupItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemsControl">
                    <dx:LayoutTransformPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <DockPanel>
                            <ItemsPresenter x:Name="items" Visibility="Visible" DockPanel.Dock="Right" />
                        </DockPanel>
                    </dx:LayoutTransformPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxn:CollapsedActiveGroupItemsPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupItemsContainerStyle}}" />
    </Style>    
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupStyle}" TargetType="dxn:CollapsedActiveGroupControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupControl">                    
                    <Grid>
                        <Control Template="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupBackgroundTemplate}}" IsHitTestVisible="False" />                                                
                        <dx:LayoutTransformPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <dxn:CollapsedActiveGroupDefaultElement x:Name="defaultItem" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.NavBar.ActiveGroup, Converter={dxn:NavBarGroupToNavBarItemConverter}}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DefaultIsChecked, Mode=TwoWay}" HorizontalAlignment="Right" Template="{DynamicResource ResourceKey={dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupItemsTemplate}}" />
                        </dx:LayoutTransformPanel>
                        <dxn:CollapsedActiveGroupItemsControl x:Name="items" Style="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGruopItemsControlStyle}}" HorizontalAlignment="Center" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Group.CollapsedNavPaneItems}" ShowMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShowMode, Mode=TwoWay}" />                        
                        <dxn:CollapsedActiveGroup dxn:NavigationPaneView.Element="CollapsedActiveGroup" x:Name="legacyDefaultItem" IsChecked="{Binding Path=DefaultIsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=ActualVisualStyle}" Template="{Binding Path=NavBar.View.CollapsedActiveGroupControlTemplate}" dx:FocusHelper2.Focusable="False" Grid.Row="0" />
                    </Grid>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowMode" Value="MaximizedDefaultItem">
                            <Setter TargetName="defaultItem" Property="HorizontalAlignment" Value="Stretch" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--END WPF-->
    <ControlTemplate x:Key="{dxnt:NavigationPaneGroupClientThemeKey ResourceKey=ActiveGroupTemplate}" TargetType="dxn:NavPaneActiveGroupControl">
        <xpf:XPFDockPanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ExpandState">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ActiveGroupHeaderContentPresenter" Storyboard.TargetProperty="ShowContent">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>                                            
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PopupGroupContentPresenter" Storyboard.TargetProperty="ShowContent">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>False</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="panel" Storyboard.TargetProperty="(xpf:XPFDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <!--BEGIN WPF-->
                                        <Dock>Left</Dock>
                                        <!--END WPF-->
                                        <!--ONLY SL<dx:Dock>Left</dx:Dock>ONLY SL-->
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowState">
                    <VisualState x:Name="ShowItems" />
                    <VisualState x:Name="ShowContent">
                        <Storyboard>
                            <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ActiveGroupHeaderContentPresenter" Storyboard.TargetProperty="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                            </ObjectAnimationUsingKeyFrames>-->
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="collapsedGroupContent" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="IsHitTestVisible">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>False</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}" x:Name="panel" xpf:XPFDockPanel.Dock="Top">
                <dxn:NavBarGroupHeader x:Name="groupHeader" Style="{Binding Path=ActualVisualStyle}" Template="{Binding Path=ActualGroupHeaderTemplate}" />
            </dx:LayoutTransformPanel>
            <Grid>
                <xpf:XPFDockPanel x:Name="collapsedGroupContent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False">
                    <!--BEGIN WPF-->
                    <dxn:NavPanePopup x:Name="popup" Orientation="{Binding Path=NavBar.View.Orientation}" ActualParent="{Binding ElementName=ItemsContainer}" IsOpen="{Binding Path=DefaultIsChecked, ElementName=collapsedActiveGroupControl, Mode=TwoWay}" PlacementTarget="{Binding ElementName=collapsedActiveGroupControl}" Style="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowStyle}}">
                    <!--END WPF-->
                    <!--ONLY SL<dxn:NavPanePopup x:Name="popup" Orientation="{Binding Path=NavBar.View.Orientation}" ActualParent="{Binding ElementName=ItemsContainer}" IsOpen="{Binding Path=IsChecked, ElementName=collapsedActiveGroup, Mode=TwoWay}" PlacementTarget="{Binding ElementName=collapsedActiveGroup}" Style="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowStyle}}">ONLY SL-->

                        <dxn:NavPanePopupWindowContent x:Name="popupContent">
                            <dxn:NavBarGroupContentPresenter x:Name="PopupGroupContentPresenter" ShowContent="False" DisplaySource="{Binding Path=DataContext.DisplaySource, RelativeSource={RelativeSource TemplatedParent}}" ActualContent="{Binding Path=DataContext, Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}, RelativeSource={RelativeSource TemplatedParent}}" ContentDataTemplate="{TemplateBinding GroupContentPresenterTemplate}" ItemsDataTemplate="{TemplateBinding GroupItemsControlTemplate}" />
                        </dxn:NavPanePopupWindowContent>
                    </dxn:NavPanePopup>
                    <!--BEGIN WPF-->
                    <dxn:CollapsedActiveGroupControl x:Name="collapsedActiveGroupControl" Style="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupStyle}}" Group="{Binding Path=NavBar.ActiveGroup}" />         
                    <!--END WPF-->

                    <!--ONLY SL
                    <dxn:CollapsedActiveGroup dxn:NavigationPaneView.Element="CollapsedActiveGroup" x:Name="collapsedActiveGroup" Style="{Binding Path=ActualVisualStyle}" Template="{Binding Path=NavBar.View.CollapsedActiveGroupControlTemplate}"
                        dx:FocusHelper2.Focusable="False" />
                    ONLY SL-->
                </xpf:XPFDockPanel>
                <dxn:GroupItemsContainer x:Name="ItemsContainer" Opacity="{Binding Path=(dxn:NavBarAnimationOptions.AnimationProgress)}" dx:FocusHelper2.Focusable="False">
                    <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}" Clockwise="True">
                        <dxn:NavBarGroupContentPresenter x:Name="ActiveGroupHeaderContentPresenter" ShowContent="False" DisplaySource="{Binding Path=DataContext.DisplaySource, RelativeSource={RelativeSource TemplatedParent}}" ActualContent="{Binding Path=DataContext, Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}, RelativeSource={RelativeSource TemplatedParent}}" ContentDataTemplate="{TemplateBinding GroupContentPresenterTemplate}" ItemsDataTemplate="{TemplateBinding GroupItemsControlTemplate}" />
                    </dx:LayoutTransformPanel>
                </dxn:GroupItemsContainer>
            </Grid>            
        </xpf:XPFDockPanel>
    </ControlTemplate>
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=GroupControlStyle}" TargetType="dxn:NavPaneActiveGroupControl">
        <Setter Property="Focusable" Value="{Binding Path=Group.NavBar.View.Focusable, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="GroupItemsControlTemplate" Value="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupItemsTemplate}}" />
        <Setter Property="GroupContentPresenterTemplate" Value="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=GroupContainerTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:NavigationPaneGroupClientThemeKey ResourceKey=ActiveGroupTemplate}}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <!--BEGIN WPF-->
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=MenuItemStyle}" TargetType="MenuItem">
        <Setter Property="Template" Value="{DynamicResource {dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=MenuItemTemplate}}" />
    </Style>
    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=MenuItemContainerStyle}" TargetType="MenuItem" BasedOn="{StaticResource {dxnt:NavigationPaneThemeKey ResourceKey=MenuItemStyle}}">
        <Setter Property="Header" Value="{Binding Path=Header}" />
        <Setter Property="IsCheckable" Value="True" />
        <Setter Property="IsChecked" Value="{Binding Path=NavigationPaneVisible, Mode=TwoWay}" />
        <Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
    </Style>
    <!--END WPF-->
    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ViewTemplate}" TargetType="dxn:NavigationPaneView">
        <dx:DXExpander Name="PART_DXExpander" MinWidth="{Binding Path=(dxn:NavBarAnimationOptions.MinWidth), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(dxn:NavBarAnimationOptions.MinHeight), RelativeSource={RelativeSource TemplatedParent}}" HorizontalExpand="{Binding Path=(dxn:NavBarAnimationOptions.HorizontalExpand), RelativeSource={RelativeSource TemplatedParent}}" VerticalExpand="{Binding Path=(dxn:NavBarAnimationOptions.VerticalExpand), RelativeSource={RelativeSource TemplatedParent}}" StretchChild="{Binding Path=(dxn:NavBarAnimationOptions.StretchChild), RelativeSource={RelativeSource TemplatedParent}}" AnimationProgress="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime, Converter={StaticResource IsActiveToAnimationProgressConverter}}" dxn:NavBarAnimationOptions.IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" dxn:NavBarAnimationOptions.ExpandStoryboard="{Binding Path=(dxn:NavBarAnimationOptions.ExpandStoryboard), RelativeSource={RelativeSource TemplatedParent}}" dxn:NavBarAnimationOptions.CollapseStoryboard="{Binding Path=(dxn:NavBarAnimationOptions.CollapseStoryboard), RelativeSource={RelativeSource TemplatedParent}}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.HorizontalExpand)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:HorizontalExpandMode>None</dx:HorizontalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.VerticalExpand)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:VerticalExpandMode>FromBottomToTop</dx:VerticalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandState">
                    <VisualState x:Name="Expanded" />
                    <VisualState x:Name="Collapsed" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="PART_NavPaneContentPresenter" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:DXExpander>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanel}">
        <ContentControl Template="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelTemplate}}" Style="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelStyle}}" dx:FocusHelper2.Focusable="False">
            <ItemsPresenter />
        </ContentControl>
    </ControlTemplate>

    <DataTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=DefaultNavPaneGroupButtonTemplate}">
        <dx:LayoutTransformPanel Orientation="{Binding NavBar.View.Orientation}">
            <dxn:NavPaneGroupButton dxn:NavigationPaneView.Element="GroupButtonPanel" DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}" x:Name="button" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}" Style="{Binding Path=ActualVisualStyle}" ContentTemplateSelector="{Binding Path=ActualNavPaneGroupButtonTemplateSelector}" Focusable="{Binding Path=NavBar.View.Focusable}" Template="{Binding Path=NavBar.View.GroupButtonControlTemplate}" />
        </dx:LayoutTransformPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=NavPaneOverflowGroupButtonTemplate}">
        <dxn:NavPaneXPFButton DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}" dxn:NavigationPaneView.Element="OverflowPanel" Template="{Binding Path=NavBar.View.OverflowGroupControlTemplate}" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}" Style="{Binding Path=ActualVisualStyle}" Focusable="{Binding Path=NavBar.View.Focusable}" ContentTemplateSelector="{Binding Path=ActualNavPaneOverflowGroupTemplateSelector}" />
    </DataTemplate>

    <dxn:OrientationToCursorConverter x:Key="OrientationToCursorConverter" />
    <DataTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ViewContentTemplate}">
        <dxn:NavigationPanePanel x:Name="NavigationPane" Orientation="{Binding Path=View.Orientation}" dxn:ThumbDragManager.Thumb="{Binding ElementName=PART_Thumb}" dxn:ThumbDragManager.DownDragDelta="20" dxn:ThumbDragManager.UpDragDelta="20" dxn:ThumbDragManager.Orientation="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" DataContext="{Binding Path=NavBar}">            
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(dx:CursorHelper.Cursor)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:CursorType>SizeNS</dx:CursorType>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(dx:CursorHelper.Cursor)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:CursorType>SizeWE</dx:CursorType>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="activeGroup" Storyboard.TargetProperty="MinHeight">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>0</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>                            
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <dxn:NavigationPanePanel.ActiveGroup>
                <dxn:NavPaneActiveGroupControl x:Name="activeGroup" Style="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=GroupControlStyle}}" DataContext="{Binding Path=DataContext.NavBar.ActiveGroup, RelativeSource={RelativeSource TemplatedParent}}">
                </dxn:NavPaneActiveGroupControl>
            </dxn:NavigationPanePanel.ActiveGroup>
            <dxn:NavigationPanePanel.Splitter>
                <dxn:NavPaneSplitter x:Name="PART_Thumb" Cursor="{Binding Path=View.Orientation, Converter={StaticResource OrientationToCursorConverter}}" Visibility="{Binding Path=View.ActualIsSplitterVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                </dxn:NavPaneSplitter>
            </dxn:NavigationPanePanel.Splitter>
            
            <dxn:NavigationPanePanel.GroupsControl>

                <dxn:NavPaneGroupButtonPanelControl x:Name="groupButtonPanel" ItemsSourceCore="{Binding Path=View.ItemsControlGroups, Converter={dxn:NavBarGroupCollectionConverter}}" Style="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=ButtonGroupControlStyle}}" Template="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanel}}" ItemContainerStyle="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=GroupButtonItemsContainerStyle}}" ItemTemplate="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=DefaultNavPaneGroupButtonTemplate}}" dx:FocusHelper2.Focusable="False">
                    <!--ONLY SL<dx:FrameworkElementHelper.IsClipped>
                        <sys:Boolean>True</sys:Boolean>
                    </dx:FrameworkElementHelper.IsClipped>ONLY SL-->
                </dxn:NavPaneGroupButtonPanelControl>
            </dxn:NavigationPanePanel.GroupsControl>

            <dxn:NavigationPanePanel.OverflowPanel>
                <dxn:NavPaneOverflowPanel x:Name="overflowControl" Visibility="{Binding Path=View.ActualIsOverflowPanelVisible, Converter={StaticResource BoolToVisibilityConverter}}">                    
                        <xpf:XPFDockPanel LastChildFill="False">
                            <dxn:NavPaneDropDownMenuControl x:Name="dropDownControl" />
                            
                            <dxn:NavPaneItemsControl x:Name="overflowPanel" ItemsSourceCore="{Binding Path=View.OverflowPanelGroups, Converter={dxn:NavBarGroupCollectionConverter}}" xpf:XPFDockPanel.Dock="Right" Template="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=OverflowPanel}}" ItemContainerStyle="{DynamicResource {dxnt:NavigationPaneThemeKey ResourceKey=OverflowGroupItemsContainerStyle}}" ItemTemplate="{DynamicResource {dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=NavPaneOverflowGroupButtonTemplate}}" dx:FocusHelper2.Focusable="False">
                                <!--ONLY SL
                            <dx:FrameworkElementHelper.IsClipped>
                                <sys:Boolean>True</sys:Boolean>
                            </dx:FrameworkElementHelper.IsClipped>
                            ONLY SL-->
                                <dxn:NavPaneItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxn:NavPaneItemsControlPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </dxn:NavPaneItemsControl.ItemsPanel>
                            </dxn:NavPaneItemsControl>
                        </xpf:XPFDockPanel>                    
                </dxn:NavPaneOverflowPanel>
            </dxn:NavigationPanePanel.OverflowPanel>
        </dxn:NavigationPanePanel>
    </DataTemplate>    
</ResourceDictionary>