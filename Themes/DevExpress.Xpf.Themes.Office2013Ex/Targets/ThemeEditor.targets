<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="DevExpress.Build.XamlResourceProcessing.XamlPatcherTask" AssemblyName="DevExpress.Build.XamlResourceProcessing.v15.2, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=79868b8147b5eae4"/>
  <UsingTask TaskName="DevExpress.Build.XamlResourceProcessing.BamlsPatcherTask" AssemblyName="DevExpress.Build.XamlResourceProcessing.v15.2, Version=1.0.0.0, Culture=Neutral, PublicKeyToken=79868b8147b5eae4"/>

  <Target Name="MarkupCompilePass1" DependsOnTargets="$(MarkupCompilePass1DependsOn);SplashScreenValidation" Condition="'@(Page)' != '' or '@(ApplicationDefinition)' != '' " >
        <Message Text="(in) Page: '@(PatchedPage)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(in) ApplicationDefinition: '@(ApplicationDefinition)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(in) Resource: '@(Resource)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(in) CodeGenReference: '@(ReferencePath)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <PropertyGroup>
            <_IntellisenseOnlyCompile>false</_IntellisenseOnlyCompile>
            <_IntellisenseOnlyCompile Condition="'$(BuildingProject)' != 'true'">true</_IntellisenseOnlyCompile>
        </PropertyGroup>
        <MarkupCompilePass1
               Language="$(Language)"
               UICulture="$(UICulture)"
               ApplicationMarkup="@(ApplicationDefinition)"
               SplashScreen="@(SplashScreen)"
               LanguageSourceExtension="$(DefaultLanguageSourceExtension)"
               PageMarkup="@(PatchedPage)"
               ContentFiles="@(Content)"
               AssemblyName="$(AssemblyName)"
               OutputType="$(OutputType)"
               AssemblyVersion="$(AssemblyVersion)"
               AssemblyPublicKeyToken="$(AssemblyPublicKeyToken)"
               References="@(ReferencePath)"
               RootNamespace="$(RootNamespace)"
               KnownReferencePaths="$(MSBuildBinPath);$(TargetFrameworkDirectory);@(_TargetFrameworkSDKDirectoryItem);@(KnownReferencePaths)"
               AssembliesGeneratedDuringBuild="@(AssembliesGeneratedDuringBuild)"
               AlwaysCompileMarkupFilesInSeparateDomain="$(AlwaysCompileMarkupFilesInSeparateDomain)"
               HostInBrowser="$(HostInBrowser)"
               LocalizationDirectivesToLocFile="$(LocalizationDirectivesToLocFile)"
               ContinueOnError="$(_IntellisenseOnlyCompile)"
               SourceCodeFiles="@(Compile)"
               DefineConstants="$(DefineConstants)"
               ExtraBuildControlFiles="@(ExtraBuildControlFiles)"
               XamlDebuggingInformation="$(XamlDebuggingInformation)"
               OutputPath="$(IntermediateOutputPath)">

              <Output ItemName="GeneratedBaml" TaskParameter="GeneratedBamlFiles"/>
              <Output ItemName="GeneratedLocalizationFiles" TaskParameter="GeneratedLocalizationFiles" />
              <Output PropertyName="_RequireMCPass2ForMainAssembly" TaskParameter="RequirePass2ForMainAssembly" />
              <Output PropertyName="_RequireMCPass2ForSatelliteAssemblyOnly" TaskParameter="RequirePass2ForSatelliteAssembly" />
              <Output ItemName="Compile" TaskParameter="GeneratedCodeFiles" />
              <Output ItemName="FileWrites" TaskParameter="AllGeneratedFiles" />
              <Output ItemName="_GeneratedCodeFiles" TaskParameter="GeneratedCodeFiles" />
        </MarkupCompilePass1>

        <Message Text="(out) GeneratedBamlFiles: '@(GeneratedBaml)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(out) SourceCodeFiles: '@(Compile)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(Out) GeneratedCodeFiles: '@(_GeneratedCodeFiles)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(out) GeneratedLocalizationFiles: @(GeneratedLocalizationFiles)" Condition="'$(MSBuildTargetsVerbose)'=='true'" />
        <Message Text="(out) _RequireMCPass2ForMainAssembly : '$(_RequireMCPass2ForMainAssembly)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(out) _RequireMCPass2ForSatelliteAssemblyOnly : '$(_RequireMCPass2ForSatelliteAssemblyOnly)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>

  </Target>

  <Target Name="FileClassification" DependsOnTargets="BamlsPatcher">

      <FileClassifier Condition="'@(OutputBamls)' != '' or '@(Resource)' != '' or '@(Font)' != ''"
                      SourceFiles="@(SplashScreen);@(OutputBamls);@(Resource);@(Font)"
                      Culture="$(UICulture)"
                      OutputType="$(OutputType)"
                      MainEmbeddedFiles="@(MainEmbeddedFiles)"
                      SatelliteEmbeddedFiles="@(SatelliteEmbeddedFiles)"
                      CLREmbeddedResource="@(CLREmbeddedResources)"
                      CLRSatelliteEmbeddedResource="@(CLRSatelliteEmbeddedResources)"
                      CLRResourceFiles="@(CLRResources)" >

          <Output ItemName="MainEmbeddedFiles" TaskParameter="MainEmbeddedFiles" />
          <Output ItemName="SatelliteEmbeddedFiles" TaskParameter="SatelliteEmbeddedFiles" />
          <Output ItemName="WinFXEmbeddedResource" TaskParameter="CLREmbeddedResource" />
          <Output ItemName="WinFXEmbeddedResource" TaskParameter="CLRSatelliteEmbeddedResource" />
      </FileClassifier>

        <Message Text="(out) EmbeddedFiles: '@(MainEmbeddedFiles)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
        <Message Text="(out) SatelliteEmbeddedFiles: '@(SatelliteEmbeddedFiles)'" Condition="'$(MSBuildTargetsVerbose)'=='true'"/>
  </Target>

  <PropertyGroup>
    <MarkupCompilePass1DependsOn>$(MarkupCompilePass1DependsOn)XamlPatcher;</MarkupCompilePass1DependsOn>
  </PropertyGroup>

  <Target Name="XamlPatcher">
    <XamlPatcherTask PageMarkup="@(Page)" OutputPath="$(IntermediateOutputPath)" AssemblyName="$(AssemblyName)">
      <Output ItemName="PatchedPage" TaskParameter="OutputPageMarkup" />
      <Output ItemName="FullBamlsList" TaskParameter="FullBamlsList" />
    </XamlPatcherTask>
    <Message Text="(out) PatchedPages: '@(PatchedPage)'"/>
  </Target>

  <Target Name="BamlsPatcher">
    <BamlsPatcherTask InputBamls="@(FullBamlsList)">
      <Output ItemName="OutputBamls" TaskParameter="OutputBamls" />
    </BamlsPatcherTask>
  </Target>

</Project>
