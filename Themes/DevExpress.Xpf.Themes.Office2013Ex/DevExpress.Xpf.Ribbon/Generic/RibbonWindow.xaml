<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False" />
    <dxc:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />
    <dxc:NegativeConverter x:Key="negativeConverter" />
    <dxr:NegativeDoubleToThicknessTopConverter x:Key="negativeDoubleToThicknessTopConverter" />
    <ControlTemplate x:Key="DXWindowTemplate" TargetType="{x:Type dxr:DXRibbonWindow}">
        <Grid x:Name="Root_Grid" VerticalAlignment="Stretch">
            <AdornerDecorator ClipToBounds="True" x:Name="PART_WindowAdornerDecorator">
                <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" dxr:RibbonControlHelper.IsAutoHide="{TemplateBinding RibbonAutoHideMode}" dxr:RibbonControlHelper.DisplayShowModeSelector="{TemplateBinding DisplayShowModeSelector}">
                </ContentPresenter>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="DXWindowEmptyTemplate" TargetType="{x:Type dxc:DXWindow}">
        <Grid x:Name="Root_Grid" VerticalAlignment="Stretch">
            <AdornerDecorator ClipToBounds="True" x:Name="PART_WindowAdornerDecorator">
                <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding WindowTemplate}">
                    <ContentPresenter.Content>
                        <Border />
                    </ContentPresenter.Content>
                </ContentPresenter>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.DXRibbonWindow}" TargetType="{x:Type dxr:DXRibbonWindow}">
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}}" />
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowResizeBorderThickness}}" />
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroBorderSize}}" />
        <Setter Property="AeroWindowTemplate" Value="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowTemplate}}" />
        <Setter Property="WindowTemplate" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerTemplate}}" />
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}}" />
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}}" />
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}}" />
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}}" />
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}}" />
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}}" />
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}}" />
        <Setter Property="Template" Value="{StaticResource DXWindowTemplate}" />
        <Setter Property="RibbonAutoHideMode" Value="{Binding Path=ActualRibbon.AutoHideMode, RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay}" />
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerTemplate}">
        <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}}" Focusable="False">
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ContentControl Name="PART_HeaderBorder" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}" Height="{Binding Path=(dxr:DXRibbonWindow.RibbonHeaderBorderHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Focusable="False" />
                    <Grid x:Name="PART_Header" Grid.Row="0">
                        <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}" />
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="PART_IconAndCaptionArea" Grid.Column="0" IsTabStop="False" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}}">
                                <Grid Panel.ZIndex="100">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="PART_Icon" Grid.Column="0" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}}" Source="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" />
                                    <ContentControl Name="PART_Title" IsTabStop="False" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}" IsHitTestVisible="False" Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Grid.Column="1" />
                                </Grid>
                            </ContentControl>

                            <ContentControl Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}}" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}}" IsTabStop="False" Grid.Column="1" Opacity="0" Focusable="False">
                             	<StackPanel Orientation="Horizontal">
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}}" />
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}" />
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" />
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}}" />
                                </StackPanel>
                            </ContentControl>
                        </Grid>
                    </Grid>
                    <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}}" x:Name="Part_WindowContent" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}}" Grid.Row="1" Focusable="False">
                        <Grid>

                            <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}}" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}}" Focusable="False">
                                <dxc:BackgroundPanel x:Name="PART_ContainerContent" Background="{x:Null}" Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" />
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                <Border Height="Auto" Background="{x:Null}">
                                    <Thumb x:Name="PART_SizeGrip" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" Cursor="SizeNWSE" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" />
                                </Border>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>

                <Grid Background="{x:Null}" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Name="PART_Caption" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}" IsHitTestVisible="False" Opacity="0" IsTabStop="False">
                        <ContentPresenter Panel.ZIndex="100" Grid.Column="0" Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" />
                    </ContentControl>
                    <ContentControl Name="PART_ControlBoxContainer" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}}" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}}" Grid.Column="1" Focusable="False">
                        <StackPanel x:Name="stackPanel" Orientation="Horizontal">
                            <dxr:RibbonShowModeSelectorItem Name="PART_ShowModeSelector" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}}" />
                            <StackPanel Orientation="Horizontal" x:Name="controlButtons">
                                <Button x:Name="PART_Minimize" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}}" />
                                <Button x:Name="PART_Restore" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}}" Visibility="Collapsed" />
                                <Button x:Name="PART_Maximize" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}}" />
                            </StackPanel>
                            <Button x:Name="PART_CloseButton" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}}" />
                        </StackPanel>
                    </ContentControl>
                </Grid>
            </Grid>
        </ContentControl>

        <DataTemplate.Triggers>
            <Trigger Property="dxc:FloatingContainer.IsMaximized" Value="True">
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="dxr:RibbonControlHelper.IsAutoHide" Value="True">
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Part_WindowContent" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="dxc:FloatingContainer.IsActive" Value="False">
                <Setter Property="Opacity" TargetName="stackPanel" Value="0.5" />
                <Setter Property="Opacity" TargetName="PART_IconAndCaptionArea" Value="0.5" />
            </Trigger>
            <Trigger Property="dxc:FloatingContainer.FloatingContainer" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HeaderBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Title" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="dxr:RibbonControlHelper.DisplayShowModeSelector" Value="False">
                <Setter TargetName="PART_ShowModeSelector" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <ControlTemplate x:Key="DXWindowContainerTemplate" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}}" Focusable="False">
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ContentControl Name="PART_HeaderBorder" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}" Height="{Binding Path=(dxr:DXRibbonWindow.RibbonHeaderBorderHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}" Visibility="Collapsed" />
                    <Grid x:Name="PART_Header" Grid.Row="0">
                        <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}}" />
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="PART_IconAndCaptionArea" Grid.Column="0" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}}">
                                <Grid Panel.ZIndex="100">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="PART_Icon" Source="{TemplateBinding Icon}" Grid.Column="0" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}}" />
                                    <ContentControl Name="PART_Caption" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}" IsHitTestVisible="False" Content="{TemplateBinding Caption}" Grid.Column="1" />
                                </Grid>
                            </ContentControl>

                            <ContentControl Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}}" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}}" Grid.Column="1" Opacity="0" Focusable="False">
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}}" />
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}" />
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" />
                                    <Button Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}}" />
                                </StackPanel>
                            </ContentControl>
                        </Grid>
                    </Grid>
                    <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}}" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}}" Grid.Row="1" Focusable="False">
                        <Grid>
                            <ContentControl Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}}" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}}" Focusable="False">
                                <ContentPresenter Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}" />
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel" Visibility="Collapsed">
                                <Border Height="Auto" Background="{x:Null}" HorizontalAlignment="Right">
                                    <Thumb x:Name="PART_SizeGrip" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" Cursor="SizeNWSE" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" />
                                </Border>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>

                <Grid Background="{x:Null}" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Name="PART_CaptionContainer" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}}" IsHitTestVisible="False" Opacity="0">
                        <ContentPresenter Content="{TemplateBinding Caption}" Panel.ZIndex="100" Grid.Column="0" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" />
                    </ContentControl>
                    <ContentControl x:Name="PART_ControlBoxContainer" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}}" Template="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}}" Grid.Column="1" Focusable="False">
                        <StackPanel x:Name="stackPanel" Orientation="Horizontal">
                            <dxr:RibbonShowModeSelectorItem Name="PART_ShowModeSelector" Style="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}}" />
                            <StackPanel Orientation="Horizontal" x:Name="controlButtons">
                                <Button x:Name="PART_Minimize" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MinimizationButtonStyle}}" />
                                <Button x:Name="PART_Restore" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=RestoreButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}" />
                                <Button x:Name="PART_Maximize" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=MaximizeButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" />
                            </StackPanel>
                            <Button x:Name="PART_CloseButton" Style="{DynamicResource {dxrt:DXRibbonWindowThemeKey ResourceKey=CloseButtonStyle}}" />
                        </StackPanel>
                    </ContentControl>
                </Grid>
            </Grid>
        </ContentControl>

        <ControlTemplate.Triggers>
            <Trigger Property="IsHeaderVisible" Value="False">
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HeaderBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_CaptionContainer" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsStatusBarVisible" Value="True">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                <Setter Property="Opacity" TargetName="stackPanel" Value="0.5" />
                <Setter Property="Opacity" TargetName="PART_IconAndCaptionArea" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsMinimizeButtonVisible" Value="False">
                <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsRestoreButtonVisible" Value="False">
                <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMaximizeButtonVisible" Value="False">
                <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsCloseButtonVisible" Value="False">
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="dxr:RibbonControlHelper.DisplayShowModeSelector" Value="False">
                <Setter TargetName="PART_ShowModeSelector" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DXAeroWindowContainerTemplate" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <Grid>
            <Border CornerRadius="4" BorderBrush="#FF4E6166" BorderThickness="1">
                <Border CornerRadius="3" BorderBrush="#FFECF4FC" Background="#FFF0FFFF" BorderThickness="1" />
            </Border>

            <Grid>
                <Grid Margin="{Binding Path=(dxr:DXRibbonWindow.AeroContentMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="PART_Header" Grid.Row="0">
                        <ContentControl Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowHeaderBorderTemplate}}" />
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" />

                        <ContentControl x:Name="PART_IconAndCaptionArea" Grid.Column="0" Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowIconAndCaptionAreaStyle}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image x:Name="PART_Icon" Source="{TemplateBinding Icon}" Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowIconStyle}}" Grid.Column="0" Panel.ZIndex="100" />
                                <ContentControl Grid.Column="1" Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowCaptionStyle}}" IsHitTestVisible="False" Content="{TemplateBinding  Caption}" Panel.ZIndex="100" Visibility="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                            </Grid>
                        </ContentControl>
                    </Grid>

                    <ContentControl Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowContentTemplate}}" Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowContentStyle}}" Grid.Row="1" Focusable="False">
                        <Grid>
                            <ContentControl Template="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowBodyTemplate}}" Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowBodyStyle}}" Focusable="False">
                                <dxc:BackgroundPanel x:Name="PART_ContainerContent" Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}" />
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel" VerticalAlignment="Bottom" Visibility="Collapsed">
                                <Border Height="Auto" Background="{x:Null}" HorizontalAlignment="Right">
                                    <Thumb x:Name="PART_SizeGrip" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" Cursor="SizeNWSE" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" />
                                </Border>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>

                <Grid Background="{x:Null}" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Name="PART_Caption" Style="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey ResourceKey=AeroWindowCaptionStyle}}" IsHitTestVisible="False" Opacity="0">
                        <ContentPresenter Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" ContentTemplate="{DynamicResource {dxrt:DXRibbonAeroWindowThemeKey IsVisibleInBlend=True, ResourceKey=AeroWindowCaptionTemplate}}" Grid.Column="0" Panel.ZIndex="100" />
                    </ContentControl>
                    <ContentControl x:Name="PART_ControlBoxContainer" Grid.Column="1" IsHitTestVisible="False" Opacity="0" />
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHeaderVisible" Value="False">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsStatusBarVisible" Value="True">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                <Setter Property="Opacity" TargetName="PART_IconAndCaptionArea" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Ribbon.DXRibbonWindowContainer}" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <Setter Property="Template" Value="{StaticResource DXWindowContainerTemplate}" />
        <Setter Property="AeroTemplate" Value="{StaticResource DXAeroWindowContainerTemplate}" />
    </Style>
</ResourceDictionary>