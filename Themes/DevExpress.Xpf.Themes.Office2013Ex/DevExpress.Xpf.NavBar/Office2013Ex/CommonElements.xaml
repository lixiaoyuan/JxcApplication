<!--ONLY SL
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxn="clr-namespace:DevExpress.Xpf.NavBar" xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform" xmlns:xpfCore="clr-namespace:DevExpress.Xpf.Core.WPFCompatibility;assembly=DevExpress.Xpf.Core.v15.2" xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v15.2" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
ONLY SL-->
<!--BEGIN WPF-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar" xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v15.2" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <Storyboard x:Key="{dxnt:CommonElementsThemeKey ResourceKey=DefaultCollapsingStoryboard}">
        <DoubleAnimation Storyboard.TargetName="PART_DXExpander" Storyboard.TargetProperty="AnimationProgress" Duration="0:0:0.5" To="0" />
    </Storyboard>
    <Storyboard x:Key="{dxnt:CommonElementsThemeKey ResourceKey=DefaultExpandingStoryboard}">
        <DoubleAnimation Storyboard.TargetName="PART_DXExpander" Storyboard.TargetProperty="AnimationProgress" Duration="0:0:0.5" To="1" />
    </Storyboard>
    <!--END WPF-->
    <dxn:NavBarViewKindToScrollBarVisibilityConverter x:Key="NavBarViewKindToScrollBarVisibilityConverter" />
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dxn:ScrollUpCommandProvider x:Key="ScrollUpCommandProvider" />
    <dxn:ScrollDownCommandProvider x:Key="ScrollDownCommandProvider" />
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}">
            <Grid x:Name="Root" Background="#00000000" MinWidth="12" cs:Name="Grid_0001">
                <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" cs:Name="Border_0001" />
                <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" cs:Name="Border_0002" />
                <Path x:Name="Glyph" Fill="#FF666666" Stretch="Fill" Data="F1 M 0,3L 1,3L 1,2L 2,2L 2,1L 3,1L 3,0L 4,0L 4,1L 5,1L 5,2L 6,2L 6,3L 7,3L 7,6L 6,6L 6,5L 5,5L 5,4L 4,4L 4,3L 3,3L 3,4L 2,4L 2,5L 1,5L 1,6L 0,6L 0,3 Z " Width="7" Height="6" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Path_0001" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF2A8DD4" cs:Name="ColorAnimation_0001" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0002" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}">
            <Grid x:Name="Root" Background="#00000000" MinWidth="12" cs:Name="Grid_0002">
                <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" cs:Name="Border_0003" />
                <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" cs:Name="Border_0004" />
                <Path x:Name="Glyph" Fill="#FF666666" Stretch="Fill" Data="F1 M 0,0L 1,0L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,2L 5,2L 5,1L 6,1L 6,0L 7,0L 7,3L 6,3L 6,4L 5,4L 5,5L 4,5L 4,6L 3,6L 3,5L 2,5L 2,4L 1,4L 1,3L 0,3L 0,0 Z  " Width="7" Height="6" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Path_0002" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF2A8DD4" cs:Name="ColorAnimation_0003" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0004" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ScrollUpGroupButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" MinWidth="12" Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF2A8DD4" cs:Name="ColorAnimation_0005" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0006" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="ExplorerBar" />
                    <VisualState Name="NavigationPane" />
                    <VisualState Name="SideBar" />
                    <VisualState Name="NavigationPaneViewVerticalAndItemsPanelHorizontal" />
                    <VisualState Name="NavigationPaneViewHorizontalAndItemsPanelVertical" />
                    <VisualState Name="SideBarViewHorizontalAndItemsPanelVertical" />
                    <VisualState Name="SideBarViewVerticalAndItemsPanelHorizontal" />
                    <VisualState Name="SideBarViewVerticalAndItemsPanelHorizontalLast" />
                    <VisualState Name="SideBarViewHorizontalAndItemsPanelVerticalLast" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="#00000000" cs:Name="Grid_0003">
                <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" cs:Name="Border_0005" />
                <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" cs:Name="Border_0006" />
                <Path x:Name="Glyph" Fill="#FF666666" Stretch="Fill" Data="F1 M 0,3L 1,3L 1,2L 2,2L 2,1L 3,1L 3,0L 4,0L 4,1L 5,1L 5,2L 6,2L 6,3L 7,3L 7,6L 6,6L 6,5L 5,5L 5,4L 4,4L 4,3L 3,3L 3,4L 2,4L 2,5L 1,5L 1,6L 0,6L 0,3 Z " Width="7" Height="6" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Path_0003" />
            </Grid>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ScrollDownGroupButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" MinWidth="12" Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF2A8DD4" cs:Name="ColorAnimation_0007" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ColorAnimation Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0008" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="ExplorerBar" />
                    <VisualState Name="NavigationPane" />
                    <VisualState Name="SideBar" />
                    <VisualState Name="NavigationPaneViewVerticalAndItemsPanelHorizontal" />
                    <VisualState Name="NavigationPaneViewHorizontalAndItemsPanelVertical" />
                    <VisualState Name="SideBarViewHorizontalAndItemsPanelVertical" />
                    <VisualState Name="SideBarViewVerticalAndItemsPanelHorizontal" />
                    <VisualState Name="SideBarViewVerticalAndItemsPanelHorizontalLast" />
                    <VisualState Name="SideBarViewHorizontalAndItemsPanelVerticalLast" />
                    <VisualState Name="SideBarLast" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="#00000000" cs:Name="Grid_0004">
                <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" cs:Name="Border_0007" />
                <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" cs:Name="Border_0008" />
                <Path x:Name="Glyph" Fill="#FF666666" Stretch="Fill" Data="F1 M 0,0L 1,0L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,2L 5,2L 5,1L 6,1L 6,0L 7,0L 7,3L 6,3L 6,4L 5,4L 5,5L 4,5L 4,6L 3,6L 3,5L 2,5L 2,4L 1,4L 1,3L 0,3L 0,0 Z  " Width="7" Height="6" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Path_0004" />
            </Grid>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=HeaderTemplate}">
        <dxn:ImageAndTextDecorator x:Name="groupContent" ImageFallbackSize="24" DockingLeftImageMargin="4,3,0,3" DockingLeftContentMargin="4,3,4,3" DockingRightImageMargin="0,3,4,3" DockingRightContentMargin="4,3,4,3" DockingBottomImageMargin="4,-3,4,3" DockingBottomContentMargin="4,3,4,3" DockingTopImageMargin="4,3,4,-3" DockingTopContentMargin="4,3,4,3" DisplayModeImageMargin="4,3,4,3" DisplayModeTextMargin="4,3,4,3" ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}" ImageSource="{Binding Path=ImageSource}" ImageStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupImageStyle}}" ContentSource="{Binding Path=Header}" ContentStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}" />
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="ImageFallbackSize" TargetName="groupContent" Value="48" />
                <Setter Property="DockingLeftImageMargin" TargetName="groupContent" Value="8,6,0,6" />
                <Setter Property="DockingLeftContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DockingRightImageMargin" TargetName="groupContent" Value="0,6,8,6" />
                <Setter Property="DockingRightContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DockingBottomImageMargin" TargetName="groupContent" Value="8,-6,8,6" />
                <Setter Property="DockingBottomContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DockingTopImageMargin" TargetName="groupContent" Value="8,6,8,-6" />
                <Setter Property="DockingTopContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DisplayModeImageMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DisplayModeTextMargin" TargetName="groupContent" Value="8,6" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemContentDecoratorStyle}" TargetType="{x:Type dxn:ImageAndTextDecorator}">
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="DockingLeftImageMargin" Value="12,12,0,12" />
                <Setter Property="DockingLeftContentMargin" Value="12" />
                <Setter Property="DockingRightImageMargin" Value="0,12,12,12" />
                <Setter Property="DockingRightContentMargin" Value="12" />
                <Setter Property="DockingBottomImageMargin" Value="12,-12,12,12" />
                <Setter Property="DockingBottomContentMargin" Value="12" />
                <Setter Property="DockingTopImageMargin" Value="12,12,12,-12" />
                <Setter Property="DockingTopContentMargin" Value="12" />
                <Setter Property="DisplayModeTextMargin" Value="12" />
                <Setter Property="DisplayModeImageMargin" Value="12" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="DockingLeftImageMargin" Value="4,3,0,3" />
        <Setter Property="DockingLeftContentMargin" Value="4,3,4,3" />
        <Setter Property="DockingRightImageMargin" Value="0,3,4,3" />
        <Setter Property="DockingRightContentMargin" Value="4,3,4,3" />
        <Setter Property="DockingBottomImageMargin" Value="4,-3,4,3" />
        <Setter Property="DockingBottomContentMargin" Value="4,3,4,3" />
        <Setter Property="DockingTopImageMargin" Value="4,3,4,-3" />
        <Setter Property="DockingTopContentMargin" Value="4,3,4,3" />
        <Setter Property="DisplayModeImageMargin" Value="4,3,4,3" />
        <Setter Property="DisplayModeTextMargin" Value="4,3,4,3" />
    </Style>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOverState">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="PressedState">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Pressed" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DisabledStates">
                    <VisualState x:Name="EnabledState" />
                    <VisualState x:Name="DisabledState">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0" To="0.35" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Hover" Background="#FFCDE6F7" Opacity="0" cs:Name="Border_0009" />
            <Border x:Name="Pressed" Background="#FF92C0E0" Opacity="0" cs:Name="Border_0010" />
            <Border x:Name="SelectedState" Background="#FF92C0E0" Opacity="0" cs:Name="Border_0011" />
            <ContentControl x:Name="wrapper" Tag="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter x:Name="item" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:ExplorerBarThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dxn:ExplorerBarExpandButton}">
        <Grid x:Name="Root" Background="#00000000" Width="21" Height="21" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Grid_0005">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0009" />
                            <ColorAnimation Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0010" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0011" />
                            <ColorAnimation Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Duration="0" To="#FF0072C6" cs:Name="ColorAnimation_0012" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <!--BEGIN WPF-->
                            <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" />
                            <!--END WPF-->
                            <!--ONLY SL<DoubleAnimation Duration="0" To="0.35" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity"/>ONLY SL-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded" />
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Control.Visibility)" dxcn:ValueSetter.Visibility="Collapsed" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Control.Visibility)" dxcn:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="GlyphCollapsed" Stretch="Fill" Fill="#FF666666" Data="F1 M 8,7.00002L 8,4.00006L 12,4.57764e-005L 16,4.00005L 16,7.00005L 12,3.00005L 8,7.00002 Z " Width="7" Height="6" Visibility="Collapsed" cs:Name="Path_0005" />
            <Path x:Name="GlyphExpanded" Stretch="Fill" Fill="#FF666666" Data="F1 M 0,1.52588e-005L 1.22465e-016,2.99998L 4,7L 8,3L 8,1.52588e-005L 4,4.00002L 0,1.52588e-005 Z " Width="7" Height="6" cs:Name="Path_0006" />
        </Grid>
        <ControlTemplate.Triggers> 
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" TargetName="Root" Value="44" />
                <Setter Property="Height" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupHeaderTemplate}" TargetType="dxn:NavBarGroupHeader">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="ViewAnimationProgressGroupPositionStates">
                    <VisualState Name="ExplorerBarFirst" />
                    <VisualState Name="ExplorerBarFirst0" />
                    <VisualState Name="ExplorerBarMiddle" />
                    <VisualState Name="ExplorerBarMiddle0" />
                    <VisualState Name="ExplorerBarLast" />
                    <VisualState Name="ExplorerBarLast0" />
                    <VisualState Name="ExplorerBarSingle" />
                    <VisualState Name="ExplorerBarSingle0" />
                    <VisualState Name="SideBarFirst" />
                    <VisualState Name="SideBarFirst0" />
                    <VisualState Name="SideBarMiddle" />
                    <VisualState Name="SideBarMiddle0" />
                    <VisualState Name="SideBarLast" />
                    <VisualState Name="SideBarLast0" />
                    <VisualState Name="SideBarSingle" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Header" Background="#FFFFFFFF" cs:Name="Border_0016">
                <Grid Margin="0,0,0,0">
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dxn:ImageAndTextContentPresenter x:Name="groupHeaderLabel" Grid.Column="0" ImageFallbackSize="24" Margin="1,4,1,4" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}}" Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=HeaderStyle}}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}">
                                <!--ONLY SL<dxn:ImageAndTextContentPresenter.ContentTemplateSelector>
                                    <Binding Path="ActualHeaderTemplateSelector"/>
                                </dxn:ImageAndTextContentPresenter.ContentTemplateSelector>ONLY SL-->
                            </dxn:ImageAndTextContentPresenter>
                            <dx:PixelSnapper Grid.Column="1" VerticalAlignment="Center">
                                <Grid>
                                    <dxn:ExplorerBarExpandButton x:Name="explorerBarExpandButton" dxcn:RoutedCommandHelper.CommandParameter="{Binding}" Margin="0,0,7,0" />
                                    <dxn:NavPaneExpandButton x:Name="navPaneExpandButton" dxcn:RoutedCommandHelper.CommandParameter="{Binding}" Margin="0,0,7,0" Visibility="Collapsed" />
                                </Grid>
                            </dx:PixelSnapper>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ScrollableContentControlTemplate}" TargetType="dxn:ScrollableContentControl">
        <xpf:XPFDockPanel LastChildFill="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical" />
                    <VisualState Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="(xpf:XPFDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <!--BEGIN WPF-->
                                        <Dock>Left</Dock>
                                        <!--END WPF-->
                                        <!--ONLY SL<dx:Dock>Left</dx:Dock>ONLY SL-->
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="(xpf:XPFDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <!--BEGIN WPF-->
                                        <Dock>Right</Dock>
                                        <!--END WPF-->
                                        <!--ONLY SL<dx:Dock>Right</dx:Dock>ONLY SL-->
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="AllowScrollStates">
                    <VisualState Name="AllowScrollFalse">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="AllowScrollTrue" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dxn:NavBarRepeatButton x:Name="Up" Interval="100" xpf:XPFDockPanel.Dock="Top" Focusable="{Binding Path=NavBar.View.Focusable}" Orientation="{Binding Path=NavBar.View.Orientation}" ClickMode="{Binding Path=NavBar.View.(dxn:ScrollingSettings.ClickMode)}" dxcn:RoutedCommandHelper.Command="{StaticResource ScrollUpCommandProvider}" dxcn:RoutedCommandHelper.CommandTarget="{Binding ElementName=Scroller}" Template="{Binding Path=ButtonUpTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxn:NavBarRepeatButton x:Name="Down" Interval="100" xpf:XPFDockPanel.Dock="Bottom" Focusable="{Binding Path=NavBar.View.Focusable}" Orientation="{Binding Path=NavBar.View.Orientation}" ClickMode="{Binding Path=NavBar.View.(dxn:ScrollingSettings.ClickMode)}" dxcn:RoutedCommandHelper.Command="{StaticResource ScrollDownCommandProvider}" dxcn:RoutedCommandHelper.CommandTarget="{Binding ElementName=Scroller}" Template="{Binding Path=ButtonDownTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxn:NavBarSmoothScroller x:Name="Scroller" xpf:XPFDockPanel.Dock="Top" Orientation="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}}" ScrollSpeed="{Binding Path=NavBar.View.(dxn:ScrollingSettings.ScrollSpeed)}" ButtonUp="{Binding ElementName=Up}" ButtonDown="{Binding ElementName=Down}">
                <!--BEGIN WPF-->
                <dxn:NavBarSmoothScroller.IsManipulationEnabled>
                    <Binding Path="NavBar.View.(dxn:ScrollingSettings.IsManipulationEnabled)" />
                </dxn:NavBarSmoothScroller.IsManipulationEnabled>
                <dxn:NavBarSmoothScroller.Acceleration>
                    <Binding Path="NavBar.View.(dxn:ScrollingSettings.AccelerationRatio)" />
                </dxn:NavBarSmoothScroller.Acceleration>
                <dxn:NavBarSmoothScroller.Deceleration>
                    <Binding Path="NavBar.View.(dxn:ScrollingSettings.DecelerationRatio)" />
                </dxn:NavBarSmoothScroller.Deceleration>
                <!--END WPF-->
                <ContentPresenter x:Name="contentPresenter" />
            </dxn:NavBarSmoothScroller>
        </xpf:XPFDockPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="ExplorerBar" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="NavigationPane" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="SideBar" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--ONLY SL
    <dxn:NavBarViewKindToObjectConverter x:Key="navBarViewKindToObjectConverter">
        <dxn:NavBarViewKindToObjectConverter.ExplorerBarValue>
            <Thickness>1</Thickness>
        </dxn:NavBarViewKindToObjectConverter.ExplorerBarValue>
        <dxn:NavBarViewKindToObjectConverter.NavigationPaneValue>
            <Thickness>1</Thickness>
        </dxn:NavBarViewKindToObjectConverter.NavigationPaneValue>
        <dxn:NavBarViewKindToObjectConverter.SideBarValue>
            <Thickness>0</Thickness>
        </dxn:NavBarViewKindToObjectConverter.SideBarValue>
    </dxn:NavBarViewKindToObjectConverter>
    ONLY SL-->
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ScrollessContentControlTemplate}" TargetType="dxn:ScrollableContentControl">
        <Border>
            <!--ONLY SL<ContentPresenter x:Name="contentPresenter" Margin="{Binding Path=NavBar.View.NavBarViewKind, Converter={StaticResource navBarViewKindToObjectConverter}}" />ONLY SL-->
            <!--BEGIN WPF-->
            <ContentPresenter x:Name="contentPresenter" />
            <!--END WPF-->
        </Border>
        <!--BEGIN WPF-->
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="ExplorerBar" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="NavigationPane" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="SideBar" />
        </ControlTemplate.Triggers>
        <!--END WPF-->
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupItemsContainerTemplate}" TargetType="dxn:GroupItemsContainer">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="NavPaneBorderStates">
                    <VisualState Name="HideBottomBorder" />
                    <VisualState Name="ShowBottomBorder" />
                </VisualStateGroup>
                <VisualStateGroup Name="NavBarViewKindStates">
                    <VisualState Name="NavBarViewKindExplorerBar" />
                    <VisualState Name="NavBarViewKindSideBar" />
                    <VisualState Name="NavBarViewKindNavigationPane" />
                </VisualStateGroup>
                <VisualStateGroup Name="ExplorerBarItemsOrContentEmptyStates">
                    <VisualState Name="ExplorerBarItemsOrContentNotEmpty" />
                    <VisualState Name="ExplorerBarItemsOrContentEmpty">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Height">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>30</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ViewGroupPositionAnimationProgressStates">
                    <VisualState Name="ExplorerBarFirst" />
                    <VisualState Name="ExplorerBarFirst0" />
                    <VisualState Name="ExplorerBarMiddle" />
                    <VisualState Name="ExplorerBarMiddle0" />
                    <VisualState Name="ExplorerBarLast" />
                    <VisualState Name="ExplorerBarLast0" />
                    <VisualState Name="ExplorerBarSingle" />
                    <VisualState Name="ExplorerBarSingle0" />
                    <VisualState Name="SideBarFirst" />
                    <VisualState Name="SideBarFirst0" />
                    <VisualState Name="SideBarMiddle" />
                    <VisualState Name="SideBarMiddle0" />
                    <VisualState Name="SideBarSingle" />
                    <VisualState Name="SideBarSingleScrollModeNormal" />
                    <VisualState Name="SideBarLast" />
                    <VisualState Name="SideBarLastScrollModeNormal" />
                    <VisualState Name="SideBarLast0" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                <Border x:Name="Border" Background="#FFFFFFFF" HorizontalAlignment="Stretch" cs:Name="Border_0015" />
            </dx:LayoutTransformPanel>
            <dxn:ScrollControl x:Name="scrollControl" ScrollButtonsControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=SmoothScrollTemplate}}" ScrollBarControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}}" dx:FocusHelper2.Focusable="False" ScrollViewer.HorizontalScrollBarVisibility="{Binding RelativeSource={RelativeSource TemplatedParent},                  Path=NavBarViewKind, Converter={StaticResource NavBarViewKindToScrollBarVisibilityConverter}}">
                <!--ONLY SL<dx:BackgroundPanel.PatchForeground>True</dx:BackgroundPanel.PatchForeground>ONLY SL-->
                <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                    <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </dx:LayoutTransformPanel>
            </dxn:ScrollControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=NavBarGroupItemsControlTemplate}" TargetType="{x:Type dxn:NavBarGroupItemsControl}">
        <ItemsPresenter />
    </ControlTemplate>
    <Thickness x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupContentMargin}">0</Thickness>
    <Thickness x:Key="{dxnt:NavBarGroupControlThemeKey ResourceKey=NavBarItemsControlMargin}">0</Thickness>
    <dxn:FontSettings x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewItemFontSettings}" />
    <dxn:FontSettings x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewGroupFontSettings}" FontWeight="Light" FontSize="18" />
    <dxn:ImageSettings x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewItemImageSettings}" Height="16" Width="16" Stretch="Uniform" StretchDirection="Both" />
    <dxn:ImageSettings x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewGroupImageSettings}" Height="24" Width="24" Stretch="Uniform" StretchDirection="Both" />
    <dxn:LayoutSettings x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewItemLayoutSettings}" ImageVerticalAlignment="Center" ImageHorizontalAlignment="Left" TextVerticalAlignment="Center" TextHorizontalAlignment="Stretch" ImageDocking="Left" />
    <dxn:LayoutSettings x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewGroupLayoutSettings}" ImageVerticalAlignment="Center" ImageHorizontalAlignment="Left" TextVerticalAlignment="Center" TextHorizontalAlignment="Stretch" ImageDocking="Left" />
    <dxn:DisplayMode x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewItemDisplayMode}">ImageAndText</dxn:DisplayMode>
    <dxn:DisplayMode x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ViewGroupDisplayMode}">ImageAndText</dxn:DisplayMode>
    <SolidColorBrush x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupForegroundBrush}" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0001" />
    <SolidColorBrush x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemForegroundBrush}" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0002" />
    <SolidColorBrush x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemForegroundBrushInPopup}" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0003" />
    <SolidColorBrush x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupForegroundBrush}" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0004" />
    <SolidColorBrush x:Key="{dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedGroupForegroundBrush}" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0005" />
</ResourceDictionary>