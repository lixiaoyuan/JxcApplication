<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid" xmlns:dxpgi="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid/internal" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri">
    <dx:EnumToObjectConverter x:Key="firstHeaderPositionToThicknessConverter">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="RowArea">
                <dx:EnumObjectProvider.Value>
                    <Thickness>2,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="ColumnArea">
                <dx:EnumObjectProvider.Value>
                    <Thickness>-3,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="None">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <ControlTemplate x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=DataAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder x:Name="Root" Padding="2,2,3,2" MinHeight="32" ClipToBounds="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.5" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <dx:DXBorder x:Name="Separator" Background="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=AreaSeparatorBrush}}" Height="1" VerticalAlignment="Bottom" />
                <dx:SimplePanel>
                    <dx:DXBorder x:Name="Highlighter" Style="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=EmptyAreaHighlighterStyle}}" Opacity="0" />
                    <ContentPresenter />
                </dx:SimplePanel>
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=ColumnAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Padding="0,2,0,2" MinHeight="43" ClipToBounds="True" x:Name="border">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="MinHeight" To="29" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.5" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:SimplePanel>
                <dx:DXBorder x:Name="Highlighter" Style="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=EmptyAreaHighlighterStyle}}" Opacity="0" />
                <ContentPresenter />
            </dx:SimplePanel>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=RowAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder MinHeight="32" Padding="0,2,0,3" ClipToBounds="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.5" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:SimplePanel>
                <dx:DXBorder x:Name="Highlighter" Style="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=EmptyAreaHighlighterStyle}}" Opacity="0" />
                <ContentPresenter />
            </dx:SimplePanel>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=FilterAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder x:Name="Root" MinHeight="32" Padding="2,2,3,2" ClipToBounds="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Collapsed" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.5" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" Duration="00:00:00.2" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <dx:DXBorder x:Name="Separator" Background="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=AreaSeparatorBrush}}" Height="1" VerticalAlignment="Bottom" />
                <dx:SimplePanel>
                    <dx:DXBorder x:Name="Highlighter" Style="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=EmptyAreaHighlighterStyle}}" Opacity="0" />
                    <ContentPresenter />
                </dx:SimplePanel>
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>
    <Style x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=DataAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Top" />
    </Style>
    <Style x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=ColumnAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=RowAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="{dxpgi:FieldHeadersThemeKey ResourceKey=FilterAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Center" />
    </Style>
    <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=DragIndicatorTemplate}">
        <dx:DXDockPanel MinHeight="0" MinWidth="0" Name="Content">
            <Grid x:Name="GlyphUp" Width="13" Height="13" HorizontalAlignment="Center" VerticalAlignment="Top" dx:DXDockPanel.Dock="Top" RenderTransformOrigin="0.5,0.5">
                <Path Stretch="Fill" Fill="#FF0072C6" Data="F1 M 0,5L 6,11L 7,11L 13,5L 13,4L 10,4L 10,0L 3,0L 3,4L 0,4L 0,5 Z" Width="13" Height="11" Canvas.Left="0" Canvas.Top="0" cs:Name="Path_0001" />
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="ArrowUpTransform" X="1" Y="0" />
                </Grid.RenderTransform>
            </Grid>
            <Grid x:Name="GlyphDown" Width="13" Height="13" VerticalAlignment="Bottom" dx:DXDockPanel.Dock="Bottom" RenderTransformOrigin="0.5,0.5">
                <Path Stretch="Fill" Fill="#FF0072C6" Data="F1 M 13,6L 7,0L 6,0L 0,6L 0,7L 3,7L 3,11L 10,11L 10,7L 13,7L 13,6 Z" Width="13" Height="11" Canvas.Left="0" Canvas.Top="0" cs:Name="Path_0002" />
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="ArrowDownTransform" X="1" Y="0" />
                </Grid.RenderTransform>
            </Grid>
            <Grid Height="{Binding Path=(dxpg:PivotGridControl.FieldHeaderDragIndicatorSize), RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DXDockPanel.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ArrowUpTransform" Storyboard.TargetProperty="Y" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="3.5" KeySpline="0,0,0.5,1" />
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" KeySpline="0,0,0.5,1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ArrowDownTransform" Storyboard.TargetProperty="Y" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="-3.5" />
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </dx:DXDockPanel.Triggers>
            <dx:DXDockPanel.RenderTransform>
                <TranslateTransform X="-7.40686" Y="-14" />
            </dx:DXDockPanel.RenderTransform>
        </dx:DXDockPanel>
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Content" Value="32" />
                <Setter Property="MinWidth" TargetName="Content" Value="32" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowUpTemplate}">
        <Path Stretch="Fill" Fill="#FF666666" Data="F1 M 5,0L 0,5L 10,5L 5,0 Z " Width="8" Height="4" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Path_0003" />
    </ControlTemplate>
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowUpStyle}" TargetType="{x:Type Control}">
        <Setter Property="Width" Value="12" />
        <Setter Property="Margin" Value="2,0,-1,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowDownTemplate}">
        <Path Stretch="Fill" Fill="#FF666666" Data="F1 M 5,5L 0,9.53674e-007L 10,9.53674e-007L 5,5 Z " Width="8" Height="4" HorizontalAlignment="Center" VerticalAlignment="Center" cs:Name="Path_0004" />
    </ControlTemplate>  
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowDownStyle}" TargetType="{x:Type Control}">
        <Setter Property="Width" Value="12" />
        <Setter Property="Margin" Value="2,0,-1,0" /> 
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF3C3C3C" cs:Name="Setter_0001" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,-1,0,-1" />
    </Style>
    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ButtonContentTemplate}" TargetType="{x:Type dxpgi:FieldHeaderContentControl}">
        <dx:DXBorder x:Name="border1" Background="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=PivotBorderBrush}}" Margin="{Binding IsFirst, Converter={StaticResource firstHeaderPositionToThicknessConverter}}" Padding="1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="MouseOverGroup">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0" To="#FFF3F3F3" cs:Name="ColorAnimation_0001" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame Value="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=HeaderActiveGradient}}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <dx:DXBorder x:Name="Border" Background="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=HeaderNormalGradient}}" />
                <dx:DXBorder VerticalAlignment="Center">
                    <ContentPresenter x:Name="ContentPresenter1" Margin="4,3,4,3" />
                </dx:DXBorder>
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="ContentPresenter1" Value="8" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FilterTemplate}" TargetType="{x:Type ToggleButton}">
        <dx:DXBorder Margin="0,-3,0,0" Width="16" Height="16" VerticalAlignment="Top" Background="#00FF0000" Cursor="Hand" cs:Name="Border_0001">
            <Grid x:Name="Root" Width="10" Height="12">
                <Path x:Name="normal" Visibility="Collapsed" Stretch="Fill" Fill="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=FilterColor}}" Data="F1 M 1296.5,759C 1298.43,759 1300,759.896 1300,761.014L 1300,762L 1297,765L 1297,768L 1296,768L 1296,765L 1293,762L 1293,761C 1293,759.896 1294.57,759 1296.5,759 Z M 1296.5,760C 1295.12,760 1294,760.448 1294,761C 1294,761.552 1295.12,762 1296.5,762C 1297.88,762 1299,761.552 1299,761C 1299,760.448 1297.88,760 1296.5,760 Z" Margin="1,1,1,2" Width="7" Height="9" VerticalAlignment="Center" />
                <Path x:Name="mouseover" Visibility="Collapsed" Stretch="Fill" Fill="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=FilterMouseOverColor}}" Data="F1 M 1296.5,759C 1298.43,759 1300,759.896 1300,761.014L 1300,762L 1297,765L 1297,768L 1296,768L 1296,765L 1293,762L 1293,761C 1293,759.896 1294.57,759 1296.5,759 Z M 1296.5,760C 1295.12,760 1294,760.448 1294,761C 1294,761.552 1295.12,762 1296.5,762C 1297.88,762 1299,761.552 1299,761C 1299,760.448 1297.88,760 1296.5,760 Z" Margin="1,1,1,2" Width="7" Height="9" VerticalAlignment="Center" />
                <Path x:Name="checked" Visibility="Collapsed" Stretch="Fill" Fill="#FF666666" Data="F1 M 1296.5,759C 1298.43,759 1300,759.896 1300,761.014L 1300,762L 1297,765L 1297,768L 1296,768L 1296,765L 1293,762L 1293,761C 1293,759.896 1294.57,759 1296.5,759 Z M 1296.5,760C 1295.12,760 1294,760.448 1294,761C 1294,761.552 1295.12,762 1296.5,762C 1297.88,762 1299,761.552 1299,761C 1299,760.448 1297.88,760 1296.5,760 Z" Margin="1,1,1,2" Width="7" Height="9" VerticalAlignment="Center" cs:Name="Path_0005" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="normal" Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="mouseover" Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="checked" Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="checked" Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:SimplePanel x:Name="groupBorderPanel" Margin="{Binding IsFirst, Converter={StaticResource firstHeaderPositionToThicknessConverter}}">
            <dx:DXBorder BorderBrush="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=GroupBorderShadowColor}}" BorderThickness="1" Margin="1,1,-1,-1" Padding="2" />
            <dx:DXBorder BorderBrush="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=GroupBorderBrush}}" BorderThickness="1" Padding="2">
                <ContentPresenter />
            </dx:DXBorder>
        </dx:SimplePanel>
    </ControlTemplate>
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupButtonExpandItemStyle}" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="F1 M 653,383L 657,379L 653,375L 653,383 Z " />
        <Setter Property="Fill" Value="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=GroupButtonFill}}" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Width" Value="4" />  
        <Setter Property="Height" Value="8" />
        <Setter Property="Margin" Value="4" />
    
    </Style>
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupButtonCollapseItemStyle}" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="F1 M 645,375L 641,379L 645,383L 645,375 Z " />
        <Setter Property="Fill" Value="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=GroupButtonFill}}" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Width" Value="4" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Margin" Value="4" />
    </Style>
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=HeaderEmptyTextStyle}" TargetType="{x:Type dxe:TextEdit}" />
</ResourceDictionary>