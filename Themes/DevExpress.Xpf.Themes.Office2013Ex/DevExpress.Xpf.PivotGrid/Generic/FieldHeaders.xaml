<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid" xmlns:dxpgi="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid/internal" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <themes:ObjectToStringConverter x:Key="objectToStringConverter" />
    <themes:BoolToObjectConverter x:Key="boolToObjectConverterFPW" FalseValue="0" TrueValue="16" />
    <dxpgi:PivotGridFieldDataConverter x:Key="PivotGridFieldDataConverter" />
    <dxpgi:FieldListActualAreaToAreaTextConverter x:Key="fieldListActualAreaToAreaTextConverter" />
    <themes:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    
    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FilterButtonTemplate}" TargetType="{x:Type dxe:PopupBaseEdit}">
        <ToggleButton Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=FilterTemplate}}" IsTabStop="False" IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Focusable="False" />
    </ControlTemplate>

    <!--BEGIN TOSLONLY REPLACE 'TextTrimming="CharacterEllipsis"''-->

    <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ContentTemplate}">
        <TextBlock Name="textBlock" Text="{Binding Path=DisplayText, Mode=OneWay}" TextTrimming="CharacterEllipsis" Style="{Binding Path=ActualHeaderContentStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ListContentTemplate}">
        <TextBlock Name="textBlock" Text="{Binding Path=DisplayText, Mode=OneWay}" TextTrimming="CharacterEllipsis" Style="{Binding Path=ActualHeaderContentStyle}" />
    </DataTemplate>

    <!--END TOSLONLY REPLACE 'TextTrimming="CharacterEllipsis"''-->

    <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=DragElementTemplate}">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxpgi:DragFieldHeader dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Field="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
            <themes:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" x:Name="dropIndicator" DragType="Remove">
                <themes:DragIconControl.Opacity>
                    <Binding Path="(dxpgi:DragFieldHeader.CanHide)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <themes:BoolToObjectConverter TrueValue="1" FalseValue="0" />
                        </Binding.Converter>
                    </Binding>
                </themes:DragIconControl.Opacity>
            </themes:DragIconControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupDragElementTemplate}">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxpgi:DragGroupHeader Group="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
            <themes:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" x:Name="dropIndicator" DragType="Remove">
                <themes:DragIconControl.Opacity>
                    <Binding Path="(dxpgi:DragFieldHeader.CanHide)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <themes:BoolToObjectConverter TrueValue="1" FalseValue="0" />
                        </Binding.Converter>
                    </Binding>
                </themes:DragIconControl.Opacity>
            </themes:DragIconControl>
        </Grid>
    </DataTemplate>
    
    <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <dxpgi:FieldHeaderContentControl Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonContentTemplate}}" IsTabStop="False" IsPressed="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}}" IsMouseOverOverride="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border DataContext="{Binding Content, Converter={StaticResource PivotGridFieldDataConverter}}" Grid.Column="0" Name="border2">
                                        <dxpgi:FieldHeaderContentPresenter x:Name="HeaderContentPresenter" Content="{Binding}" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="13" RecognizesAccessKey="true" Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}">
                                            <!--ONLY SL 
                                         <dxpgi:FieldHeaderContentPresenter.DataContext><Binding Path="DataContext" ElementName="border2" /></dxpgi:FieldHeaderContentPresenter.DataContext>
                                         ONLY SL-->
                                        </dxpgi:FieldHeaderContentPresenter>
                                    </Border>
                                    <Border Width="{Binding CanFilterButtonVisible, Converter={StaticResource boolToObjectConverterFPW}}" Grid.Column="1">
                                        <!--<ContentControl x:Name="PART_FilterPopup" VerticalAlignment="Top"
                                                  Visibility="{Binding Path=IsFilterButtonVisible}"
                                                  Content="{Binding Path=FilterPopup}" />-->
                                        <dxpgi:FilterPopupEdit x:Name="PART_FilterPopup" VerticalAlignment="Top" Visibility="{Binding Path=IsFilterButtonVisible}" Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" Template="{Binding Path=FilterPopupTemplate}" />

                                    </Border>
                                </Grid>
                                <ContentControl x:Name="SortUp" Grid.Column="1" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowUpStyle}}" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowUpTemplate}}" Visibility="{Binding Path=IsSortUpButtonVisible}" />
                                <ContentControl x:Name="SortDown" Grid.Column="1" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowDownStyle}}" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowDownTemplate}}" Visibility="{Binding Path=IsSortDownButtonVisible}" />
                            </Grid>
                        </dxpgi:FieldHeaderContentControl>
                        <Border Name="PART_DTBorder" Background="Red" Opacity="0.3" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FieldHeaderTemplate}" TargetType="{x:Type dxpgi:FieldHeader}">
        <themes:SimplePanel themes:DragManager.IsStartDragPlace="false">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Cursor">
                    <VisualState x:Name="NormalCursor" />
                    <VisualState x:Name="HandCursor">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderButton" Storyboard.TargetProperty="Cursor">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Cursor>Hand</Cursor>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous" />
                <Border Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next" />
            </Grid>
            <Border x:Name="outerBorder">
                <Border x:Name="border0" Padding="{TemplateBinding Padding}" VerticalAlignment="Top">
                    <Button themes:DragManager.IsStartDragPlace="true" Name="PART_HeaderButton" ClickMode="Release" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" SnapsToDevicePixels="True" IsTabStop="False" Command="{Binding ChangeFieldSortOrder, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}}" dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" />
                </Border>
            </Border>
        </themes:SimplePanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=InnerGroupHeaderTemplate}" TargetType="{x:Type dxpgi:FieldHeader}">
        <!--<dx:SimplePanel dx:DragManager.IsStartDragPlace="false">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous"/>
                        <Border Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next"/>
                    </Grid>-->
        <Border x:Name="outerBorder">
            <Border x:Name="border0" Padding="{TemplateBinding Padding}" VerticalAlignment="Top">
                <Button themes:DragManager.IsStartDragPlace="true" Name="PART_HeaderButton" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" SnapsToDevicePixels="True" IsTabStop="False" Command="{Binding ChangeFieldSortOrder, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}}" dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
        </Border>
        <!--</dx:SimplePanel>-->
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupHeaderTemplate}" TargetType="{x:Type dxpgi:GroupHeader}">
        <themes:SimplePanel themes:DragManager.IsStartDragPlace="false">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Cursor">
                    <VisualState x:Name="NormalCursor" />
                    <VisualState x:Name="HandCursor">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="outerBorder" Storyboard.TargetProperty="Cursor">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Cursor>Hand</Cursor>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous" />
                <Border Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next" />
            </Grid>
            <Border x:Name="outerBorder">
                <Border x:Name="border0" Padding="{TemplateBinding Padding}" VerticalAlignment="Top">
                    <ContentControl Name="PART_HeaderButton" SnapsToDevicePixels="True" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=GroupContentTemplate}}">
                        <Grid x:Name="PART_Panel" Background="Transparent" />
                    </ContentControl>
                </Border>
            </Border>
        </themes:SimplePanel>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PivotGrid.Internal.FieldHeaders}" TargetType="{x:Type dxpgi:FieldHeaders}">
        <Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="HeadersArea" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{Binding Path=(dxpg:PivotGridControl.PivotGrid).GridMenu, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:FieldHeaders}">
                    <ContentControl x:Name="PART_Container" Template="{TemplateBinding ContentTemplate}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="EmptyStates">
                                <VisualState Name="NonEmpty" />
                                <VisualState Name="FullEmpty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Panel" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                            <DiscreteObjectKeyFrame.Value>
                                                <VerticalAlignment>Stretch</VerticalAlignment>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Empty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_EmptyText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Panel" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Stretch</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <dxpgi:FieldHeadersPanel x:Name="PART_Panel" Background="Transparent" SkipWidth="{TemplateBinding LeftPixels}" VerticalAlignment="{TemplateBinding HeadersVAlignment}" themes:DragManager.DropTargetFactory="{dxpgi:PivotGridDropTargetFactory}" MeasureMode="{TemplateBinding MeasureMode}" HorizontalAlignment="Stretch" />

                            <themes:SimplePanel VerticalAlignment="Center" Visibility="{Binding Path=IsCutted, ElementName=PART_Panel, Converter={StaticResource ResourceKey=boolToVisibilityConverter}}">

                                <themes:XPFContentControl HorizontalAlignment="Center" x:Name="CuttedContentText">
                                    <TextBlock Foreground="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=DataAreaCuttedTextForeground}}" VerticalAlignment="Center" Padding="0" Text="{dxpgi:PivotGridStringId StringId=PrintDesignerDataHeaders}" HorizontalAlignment="Center" TextWrapping="NoWrap">
                                        <!--BEGIN WPF-->
                                        <TextBlock.TextTrimming>CharacterEllipsis</TextBlock.TextTrimming>
                                        <!--END WPF-->
                                    </TextBlock>
                                </themes:XPFContentControl>

                                <!--BEGIN TOSLONLY REPLACE 'ActualWidth'ActualWidthCore'-->
                                <Line Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Center" StrokeDashArray="1 1" Height="2" X2="{Binding ActualWidth, ElementName=CuttedContentText}" Y1="1" Y2="1" Stroke="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=DataAreaCuttedTextForeground}}" StrokeThickness="2">
                                    <Line.RenderTransform>
                                        <ScaleTransform ScaleY="0.5" />
                                    </Line.RenderTransform>
                                </Line>
                                <!--END TOSLONLY REPLACE 'ActualWidth'ActualWidthCore'-->
                            
                            </themes:SimplePanel>
                            <dxe:TextEdit x:Name="PART_EmptyText" EditMode="InplaceInactive" Visibility="Collapsed" EditValue="{Binding ActualArea, Converter={StaticResource  ResourceKey=fieldListActualAreaToAreaTextConverter}, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding EmptyTextVAlignment}" HorizontalAlignment="{TemplateBinding EmptyTextHAlignment}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=HeaderEmptyTextStyle}}" />
                            <themes:BestFitDecorator x:Name="PART_HeaderBestFitControlDecorator" Width="0" Height="0" />
                        </Grid>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=HeaderEmptyTextForeground}}" />
    </Style>
    
</ResourceDictionary>