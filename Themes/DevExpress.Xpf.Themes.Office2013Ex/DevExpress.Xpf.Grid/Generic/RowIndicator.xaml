<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=ItemsControlItemPanelTemplate}">
        <dx:StackVisibleIndexPanel Orientation="Vertical" ArrangeAccordingToVisibleIndex="True" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=ItemTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=RowTemplate}}" dxg:GridPopupMenu.GridMenuType="RowCell" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=GroupPresenterTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=GroupRowTemplate}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=AdditionalTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=RowTemplate}}" />
    </ControlTemplate>

    <!--BEGIN WPF-->
    <dxg:DefaultDataTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=IconPresenterTemplate}">
    <!--END WPF-->
    <!--ONLY SL 
    <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=IconPresenterTemplate}">
    ONLY SL-->
        <Border x:Name="errorIndicatorBorder" Background="Transparent">
            <!--ONLY SL
            <Border.Resources>
                <dx:BoolToVisibilityConverter x:Name="BoolToVisibilityConverter"/>
            </Border.Resources>
            <ToolTipService.ToolTip>
                <ToolTip Visibility="{Binding Path=HasValidationError, Converter={StaticResource BoolToVisibilityConverter}}">
                    <dx:DXDockPanel>
                        <dxe:ErrorControl Content="{Binding Path=ValidationError}"/>
                        <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=ValidationError.ErrorContent}" />
                    </dx:DXDockPanel>
                </ToolTip>
            </ToolTipService.ToolTip>
ONLY SL-->
            <ContentPresenter x:Name="iconPresenter" Content="{Binding}">
                <!--BEGIN WPF-->
                <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                        <Grid />
                    </DataTemplate>
                </ContentPresenter.ContentTemplate>
                <!--END WPF-->
                <!--ONLY SL
                <ContentPresenter.ContentTemplate>
                    <Binding Path="IndicatorState">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter>
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="None">
                                        <dx:EnumObjectProvider.Value>
                                            <DataTemplate>
                                                <Grid/>
                                            </DataTemplate>
                                        </dx:EnumObjectProvider.Value>
                                    </dx:EnumObjectProvider>
                                    <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedIconTemplate}}"/>
                                    <dx:EnumObjectProvider x:Key="Changed" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ChangedIconTemplate}}"/>
                                    <dx:EnumObjectProvider x:Key="NewItemRow" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=NewItemRowIconTemplate}}"/>
                                    <dx:EnumObjectProvider x:Key="Editing" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=EditingIconTemplate}}"/>
                                    <dx:EnumObjectProvider x:Key="Error" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ErrorIconTemplate}}"/>
                                    <dx:EnumObjectProvider x:Key="FocusedError" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedErrorIconTemplate}}"/>
                                    <dx:EnumObjectProvider x:Key="AutoFilterRow" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AutoFilterRowIconTemplate}}"/>
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </ContentPresenter.ContentTemplate>
                ONLY SL-->
            </ContentPresenter>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Focused">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Changed">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ChangedIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="NewItemRow">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=NewItemRowIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=EditingIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Error">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ErrorIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="FocusedError">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedErrorIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="AutoFilterRow">
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AutoFilterRowIconTemplate}}" TargetName="iconPresenter" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.HasValidationError)}" Value="True">
                <Setter Property="ToolTip" TargetName="errorIndicatorBorder">
                    <Setter.Value>
                        <DockPanel>
                            <dxe:ErrorControl Content="{Binding Path=(dxe:BaseEdit.ValidationError)}" />
                            <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=(dxe:BaseEdit.ValidationError).ErrorContent}" />
                        </DockPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    <!--BEGIN WPF-->
    </dxg:DefaultDataTemplate>
    <!--END WPF-->
    <!--ONLY SL 
    </DataTemplate>
    ONLY SL-->
</ResourceDictionary>