<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <dx:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dxg:GridColumnToGridColumnDataConverter x:Key="GridColumnToGridColumnDataConverter" />

    <!--BEGIN WPF-->
    <dxg:DefaultDataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}">
    <!--END WPF-->
    <!--ONLY SL 
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}">
    ONLY SL-->
        <ContentPresenter Name="textBlock" Content="{Binding}" dxg:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}">
            <!--BEGIN WPF-->
            <ContentPresenter.Resources>
                
                <Style TargetType="{x:Type TextBlock}">
                    
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="True" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(dxg:GridColumnHeader.GridColumn).HeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}" />
                                <Condition Binding="{Binding Path=(dxei:TextBlockService.IsTextTrimmed), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Resources>
            <!--END WPF-->
        </ContentPresenter>
    <!--BEGIN WPF-->
    </dxg:DefaultDataTemplate>
    <!--END WPF-->
    <!--ONLY SL 
    </DataTemplate>
    ONLY SL-->
    <!--BEGIN WPF-->
    <dxg:DefaultDataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=CustomizationAreaTemplate}">
    <!--END WPF-->
    <!--ONLY SL 
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=CustomizationAreaTemplate}">
    ONLY SL-->
    <!--BEGIN WPF-->
    </dxg:DefaultDataTemplate>
    <!--END WPF-->
    <!--ONLY SL 
    </DataTemplate>
    ONLY SL-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridThumb}" TargetType="{x:Type dxg:GridThumb}">
        <!--BEGIN WPF-->
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="MinWidth" Value="8" />
        ONLY SL-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:GridThumb}">
                    <Grid Background="Transparent" dx:DragManager.IsStartDragPlace="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:ColumnEdgeTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FilterAreaTemplate}" TargetType="{x:Type dxe:PopupBaseEdit}">
        <!--ONLY SL
        <Grid>
        <ToggleButton Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ColumnFilterTemplate}}"
					  IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
					  HorizontalAlignment="Left" VerticalAlignment="Top" Focusable="False" IsTabStop="False" Foreground="{Binding Path=Parent.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                      />
        <dxe:EditorPopupBase x:Name="PART_Popup" Visibility="Collapsed"/>
        </Grid>
        ONLY SL-->
        <!--BEGIN WPF-->
        <ToggleButton Template="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ColumnFilterTemplate}}" IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Focusable="False" IsTabStop="False" Foreground="{Binding Path=Parent.(TextElement.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
        <!--END WPF-->
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DesignTimeSelectionControl}" TargetType="{x:Type dxg:DesignTimeSelectionControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="Red" IsHitTestVisible="false" Opacity="0.3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BEGIN WPF-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.SortIndicatorControl}" TargetType="dxg:SortIndicatorControl">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=SortIndicatorWidth}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=SortIndicatorUpMargin}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=SortArrowUpTemplate}}" />
        <Style.Triggers>
            <Trigger Property="SortOrder" Value="Descending">
                <Setter Property="Template" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=SortArrowDownTemplate}}" />
                <Setter Property="Margin" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=SortIndicatorDownMargin}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--END WPF-->
    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=CheckBoxSelectorColumnHeaderTemplate}">
        <Border Padding="0,0,1,0" Margin="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=CheckBoxSelectorMargin}}">
            <dxe:CheckEdit IsHitTestVisible="False" EditValue="{Binding Path=(dxgcore:DataControlBase.ActiveView).AllItemsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        </Border>
    </DataTemplate>
</ResourceDictionary>