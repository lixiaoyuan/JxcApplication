<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri">
    
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Grid/Office2013Ex/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
  <dxg:DetailLevelToObjectConverter x:Key="DetailLevelToBorderLeftConverter" DetailValue="1,0,0,0" NotDetailValue="0,0,0,0" />
    <dx:EnumToObjectConverter x:Key="EnumToObjectConverter">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="None" Value="Transparent" cs:Name="EnumObjectProvider_0001" />
            <dx:EnumObjectProvider x:Key="Selected" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}" />
            <dx:EnumObjectProvider x:Key="Focused" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowControlContainerTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder x:Name="ContentBorder" TextBlock.Foreground="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupGridRowHeaderTextBrush}}">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>
    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowPresenterStyle}" TargetType="{x:Type dxg:GroupGridRowPresenter}" />
    
    <ControlTemplate x:Key="{dxgt:CardViewThemeKey ResourceKey=GroupRowControlContainerTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder x:Name="groupBorder" Background="#FFFFFFFF" BorderBrush="#FFD6D6D6" SnapsToDevicePixels="True" cs:Name="Border_0003">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:CardViewThemeKey ResourceKey=GroupRowControlHeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <Decorator x:Name="ContentDecorator">
            <dx:DXBorder x:Name="ContentBorder" BorderThickness="0,0,0,0" BorderBrush="#FFD6D6D6" DockPanel.Dock="Top" TextBlock.Foreground="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupGridRowHeaderTextBrush}}" cs:Name="Border_0001">
                <ContentPresenter />
            </dx:DXBorder>
        </Decorator>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsPreviewExpanded}" Value="True">
                <Setter Property="BorderThickness" TargetName="ContentBorder" Value="0,1,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsRowVisible}" Value="false">
                <Setter Property="Visibility" TargetName="ContentBorder" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).Orientation, RelativeSource={RelativeSource TemplatedParent}}" Value="Horizontal">
                <Setter TargetName="ContentDecorator" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
                <Setter Property="DockPanel.Dock" Value="Left" TargetName="ContentBorder" />
                <Setter Property="VerticalAlignment" Value="Stretch" TargetName="ContentBorder" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="BorderFocusedBrush" Color="#FF0072C6" cs:Name="SolidColorBrush_0001" />
    <SolidColorBrush x:Key="BorderSelectedUnfocusedBrush" Color="#FFD6D6D6" cs:Name="SolidColorBrush_0002" />
    
    <SolidColorBrush x:Key="RowControlContainerValidationErrorBackground" cs:Name="SolidColorBrush_0003">#FFFFD9D9</SolidColorBrush>
    <SolidColorBrush x:Key="RowControlContainerTransparentBackground" cs:Name="SolidColorBrush_0004">#00000000</SolidColorBrush>
    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowControlContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            
            <dx:DXBorder x:Name="RowContentBorder">
                
                <dx:DXBorder.Background>
                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                </dx:DXBorder.Background>
                
                
            </dx:DXBorder>
            <dx:DXBorder Visibility="Collapsed" Background="{StaticResource UnfocusedRowBrush}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}" dxg:FadeSelectionHelper.Opacity="1" dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}" />
            <dx:DXBorder x:Name="RowBottomLine" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                <dx:DXBorder.BorderThickness>
                    <Binding Path="View.ShowHorizontalLines">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="0,0,0,1" FalseValue="0" />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.BorderThickness>
            </dx:DXBorder>
            <ContentPresenter />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ShowBottomLine}" Value="True">
                <Setter Property="BorderThickness" TargetName="RowBottomLine" Value="0,0,0,1" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxg:RowData.CurrentRowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RowContentBorder" Property="Background" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=ValidationErrorBrush}}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FixedGroupsAdorner}" TargetType="{x:Type dxg:FixedGroupsAdorner}">
        <Setter Property="AdornerHeight" Value="12" />
        <Setter Property="AdornerBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_0083">
                    <GradientStop Color="#20000000" Offset="0" cs:Name="GradientStop_0001" />
                    <GradientStop Color="#00000000" Offset="1" cs:Name="GradientStop_0002" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter IsHitTestVisible="false" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.RowIndicatorControl}" TargetType="{x:Type dxg:RowIndicatorControl}">
        <Setter Property="Foreground" Value="{StaticResource ResourceKey={dxgt:RowIndicatorThemeKey ResourceKey=ForegroundBrush}}" />
    </Style>
    <Style x:Key="{dxgt:GridRowThemeKey ResourceKey=DetailTotalSummaryIndentBorderStyle}" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#FFD6D6D6" cs:Name="Setter_0003" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridDetailExpandButtonContainer}" TargetType="{x:Type dxg:GridDetailExpandButtonContainer}">
        <Setter Property="IsMasterRowExpanded" Value="{Binding IsMasterRowExpanded}" />
        <Setter Property="RowPosition" Value="Single" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GridDetailExpandButtonContainer">
                    <dxg:GridDetailExpandButton Name="PART_ExpandButton" Command="{Binding View.Commands.ChangeMasterRowExpanded}" CommandParameter="{Binding Path=RowHandle.Value}" IsChecked="{Binding Path=IsRowExpanded, Mode=OneWay}" dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailRowsIndentControl}" TargetType="{x:Type dxg:DetailRowsIndentControl}">
        <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding Path=(dxg:DetailSummaryControlBase.SummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <dxg:BackgroundBorderControl Width="{Binding Path=Width}" ItemLevel="{Binding Path=Level}" RowLevel="{Binding Path=(dx:DataObjectBase.DataObject).DetailLevel, RelativeSource={RelativeSource TemplatedParent}}" LineLevel="{Binding Path=(dx:DataObjectBase.DataObject).LineLevel, RelativeSource={RelativeSource TemplatedParent}}" IsMasterRowExpanded="{Binding Path=(dx:DataObjectBase.DataObject).IsMasterRowExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder x:Name="detailLeftLine" dxg:DetailRowsIndentControl.IsSummaryDetailLevel="{Binding Path=(dxg:DetailRowsIndentControl.IsSummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding Level, Converter={StaticResource DetailLevelToBorderLeftConverter}}" HorizontalAlignment="Right" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailRowsIndentRightControl}" TargetType="{x:Type dxg:DetailRowsIndentRightControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <dxg:BackgroundBorderControl Width="{Binding Path=WidthRight}" />
                        <dx:DXBorder x:Name="detailLeftLine" BorderThickness="{Binding Level, Converter={StaticResource DetailLevelToBorderLeftConverter}}" HorizontalAlignment="Left" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>