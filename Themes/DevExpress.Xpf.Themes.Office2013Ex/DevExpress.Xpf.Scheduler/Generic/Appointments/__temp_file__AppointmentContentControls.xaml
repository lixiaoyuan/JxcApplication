<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler" xmlns:dxschcore="clr-namespace:DevExpress.XtraScheduler;assembly=DevExpress.XtraScheduler.v15.2.Core" xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys" xmlns:dxschd="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dxschd:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.AppointmentImagesControl}" TargetType="{x:Type dxschd:AppointmentImagesControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:AppointmentImagesControl}">
                    <StackPanel Orientation="{TemplateBinding Orientation}" HorizontalAlignment="Left">
                        
                        <Image Margin="2,0,2,0" MinWidth="16" MinHeight="16" Stretch="None" Visibility="{Binding ShouldShowReminderImage, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" Source="{TemplateBinding ReminderImage}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" />
                        <Image Margin="2,0,2,0" MinWidth="16" Height="16" Stretch="None" Visibility="{Binding ShouldShowRecurrenceImage, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" Source="{TemplateBinding RecurrenceImage}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" />
                        <Image Margin="2,0,2,0" MinWidth="16" MinHeight="16" Stretch="None" Visibility="{Binding ShouldShowChangedRecurrenceImage, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" Source="{TemplateBinding ChangedRecurrenceImage}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" />
                        
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.AppointmentContinueStartDateControl}" TargetType="{x:Type dxschd:AppointmentContinueStartDateControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:AppointmentContinueStartDateControl}">
                    <StackPanel Orientation="Horizontal">
                        
                        <Image Margin="0,0,1,0" Height="13" Source="{TemplateBinding ArrowImage}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" />
                        
                        <TextBlock Text="{Binding Path=ViewInfo.StartContinueItemText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.AppointmentContinueEndDateControl}" TargetType="{x:Type dxschd:AppointmentContinueEndDateControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:AppointmentContinueEndDateControl}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="0,0,1,0" Text="{Binding Path=ViewInfo.EndContinueItemText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        
                        <Image Margin="0,0,1,0" Height="13" Source="{TemplateBinding ArrowImage}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" />
                        
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.VerticalAppointmentClockControl}" TargetType="{x:Type dxschd:VerticalAppointmentClockControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:AppointmentClockControlBase}">
                    <WrapPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <TextBlock Margin="0,0,4,0" Text="{TemplateBinding TimeText}" TextWrapping="Wrap" Visibility="{TemplateBinding TimeTextVisibility}" />
                    </WrapPanel>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FlowDirection">
            <Setter.Value>
                <FlowDirection>
                    LeftToRight
                </FlowDirection>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Scheduler.Drawing.HorizontalAppointmentClockControlBase}" TargetType="{x:Type dxschd:HorizontalAppointmentClockControlBase}">
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxschd:HorizontalAppointmentClockControlBase}">
                    <Grid>
                        
                        <WrapPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                            <TextBlock x:Name="Text" Margin="2,0,2,0" Text="{TemplateBinding TimeText}" TextWrapping="Wrap" Visibility="{Binding ViewInfo.ShowTimeAsClock, RelativeSource={RelativeSource TemplatedParent}, Converter={dxschd:BoolToVisibilityConverter Inverse=True}}" />
                            <Grid SnapsToDevicePixels="True" x:Name="DaytimeClock" Width="14" Height="14" Visibility="{Binding IsDayTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Path SnapsToDevicePixels="True" Stretch="Fill" Fill="#FF393A3D" Data="F1 M 537,350C 540.866,350 544,353.134 544,357C 544,360.866 540.866,364 537,364C 533.134,364 530,360.866 530,357C 530,353.134 533.134,350 537,350 Z " />
                                <Path SnapsToDevicePixels="True" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 537,351C 540.314,351 543,353.686 543,357C 543,360.314 540.314,363 537,363C 533.686,363 531,360.314 531,357C 531,353.686 533.686,351 537,351 Z " Margin="1" />
                                <Path SnapsToDevicePixels="True" x:Name="minutes" Stretch="Fill" Fill="#FF393A3D" Data="F1 M627,378 L628,384 C628,384 628,385 627,385 626,385 626,384 626,384 626,384 626.667,380.286 627,378 z" HorizontalAlignment="Center" Height="9" Margin="0,-7,0,0" VerticalAlignment="Center" Width="2" RenderTransformOrigin="0.5,0.857">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform x:Name="MinutesHandTransform" Angle="{Binding AngleMinutes, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path SnapsToDevicePixels="True" x:Name="hours" Stretch="Fill" Fill="#FF393A3D" Data="F1 M627,379 L628,384 C628,384 628,385 627,385 626,385 626,384 626,384 626,384 626.667,381.286 627,379 z" HorizontalAlignment="Center" Height="7" Margin="0,-5,0,0" VerticalAlignment="Center" Width="2" RenderTransformOrigin="0.5,0.833">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform x:Name="HoursHandTransform" Angle="{Binding AngleHours, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Grid x:Name="NighttimeClock" Height="14" Width="14" Visibility="{Binding IsNightTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Ellipse Fill="#FF2D2D2D" />
                                <Path x:Name="Minute" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M627,378 L628,384 C628,384 628,385 627,385 626,385 626,384 626,384 626,384 626.667,380.286 627,378 z" HorizontalAlignment="Center" Height="9" Margin="0,-7,0,0" VerticalAlignment="Center" Width="2" RenderTransformOrigin="0.5,0.857">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform x:Name="MinuteHandTransform" Angle="{Binding AngleMinutes, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="Hour" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M627,379 L628,384 C628,384 628,385 627,385 626,385 626,384 626,384 626,384 626.667,381.286 627,379 z" HorizontalAlignment="Center" Height="7" Margin="0,-5,0,0" VerticalAlignment="Center" Width="2" RenderTransformOrigin="0.5,0.833">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            
                                            <RotateTransform x:Name="HourHandTransform" Angle="{Binding AngleHours, RelativeSource={RelativeSource TemplatedParent}}" />
                                            
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </WrapPanel>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FlowDirection">
            <Setter.Value>
                <FlowDirection>
                    LeftToRight
                </FlowDirection>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>