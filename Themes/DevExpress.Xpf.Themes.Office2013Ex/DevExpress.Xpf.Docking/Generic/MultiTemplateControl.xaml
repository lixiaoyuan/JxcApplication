<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform" xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.MultiTemplateControl}" TargetType="{x:Type ve:MultiTemplateControl}">
        <Setter Property="EmptyTemplate" Value="{x:Null}" />
        <Setter Property="ControlItemTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:ControlItem DataContext="{TemplateBinding LayoutItem}" Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Header="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PanelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:DockPane DataContext="{TemplateBinding LayoutItem}" Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Header="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GroupTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:GroupPane DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--BEGIN WPF-->
        <Setter Property="FloatingWindowTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:FloatingWindowPresenter DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" BorderStyle="{Binding Path=LayoutItem.BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" IsMaximized="{Binding Path=LayoutItem.IsMaximized, RelativeSource={RelativeSource TemplatedParent}}" FloatLocation="{Binding Path=LayoutItem.FloatLocation, RelativeSource={RelativeSource TemplatedParent}}" FloatSize="{Binding Path=LayoutItem.FloatSize, RelativeSource={RelativeSource TemplatedParent}}" IsOpen="{Binding Path=LayoutItem.IsOpen, RelativeSource={RelativeSource TemplatedParent}}" ShadowMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ShadowMargin}}" BorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=BorderMargin}}" SingleBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=SingleBorderMargin}}" FormBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=FormBorderMargin}}" MaximizedBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=MaximizedBorderMargin}}" ContainerTemplate="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=Template}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FloatingAdornerTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:FloatingAdornerPresenter DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" BorderStyle="{Binding Path=LayoutItem.BorderStyle, RelativeSource={RelativeSource TemplatedParent}}" IsMaximized="{Binding Path=LayoutItem.IsMaximized, RelativeSource={RelativeSource TemplatedParent}}" FloatLocation="{Binding Path=LayoutItem.FloatLocation, RelativeSource={RelativeSource TemplatedParent}}" FloatSize="{Binding Path=LayoutItem.FloatSize, RelativeSource={RelativeSource TemplatedParent}}" SizeToContent="{Binding Path=LayoutItem.SizeToContent, RelativeSource={RelativeSource TemplatedParent}}" IsOpen="{Binding Path=LayoutItem.IsOpen, RelativeSource={RelativeSource TemplatedParent}}" ShadowMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ShadowMargin}}" BorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=BorderMargin}}" SingleBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=SingleBorderMargin}}" FormBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=FormBorderMargin}}" MaximizedBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=MaximizedBorderMargin}}" ContainerTemplate="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=Template}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="FloatingPaneTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:FloatPanePresenter DataContext="{TemplateBinding LayoutItem}"
                            Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderStyle="{Binding Path=LayoutItem.BorderStyle, RelativeSource={RelativeSource TemplatedParent}}"
                            IsMaximized="{Binding Path=LayoutItem.IsMaximized, RelativeSource={RelativeSource TemplatedParent}}"
                            FloatLocation="{Binding Path=LayoutItem.FloatLocation, RelativeSource={RelativeSource TemplatedParent}}"
                            FloatSize="{Binding Path=LayoutItem.FloatSize, RelativeSource={RelativeSource TemplatedParent}}"                        
                            IsOpen="{Binding Path=LayoutItem.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            ShadowMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ShadowMargin}}"
                            BorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=BorderMargin}}"
                            SingleBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=SingleBorderMargin}}"
                            FormBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=FormBorderMargin}}"
                            MaximizedBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=MaximizedBorderMargin}}"
                            ContainerTemplate="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=Template}}"
                        />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        ONLY SL-->
        <Setter Property="TabPanelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:TabbedPane DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentPanelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:DocumentPane DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:Document DataContext="{TemplateBinding LayoutItem}" Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FloatDocumentTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:FloatDocument DataContext="{TemplateBinding LayoutItem}" Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MDIDocumentTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:MDIDocument DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SplitterControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:SplitterControl LayoutItem="{TemplateBinding LayoutItem}" IsEnabled="{Binding Path=LayoutItem.IsEnabled, RelativeSource={RelativeSource TemplatedParent}}">
                    </ve:SplitterControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EmptySpaceControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:EmptySpaceControl />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LabelControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:LabelControl DataContext="{TemplateBinding LayoutItem}" Header="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SeparatorControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:SeparatorControl DataContext="{TemplateBinding LayoutItem}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" Orientation="{Binding Path=LayoutItem.Orientation, RelativeSource={RelativeSource TemplatedParent}}">
                    </ve:SeparatorControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AutoHideGroupTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ve:MultiTemplateControl">
                    <ve:AutoHideTrayHeadersGroup LayoutItem="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>