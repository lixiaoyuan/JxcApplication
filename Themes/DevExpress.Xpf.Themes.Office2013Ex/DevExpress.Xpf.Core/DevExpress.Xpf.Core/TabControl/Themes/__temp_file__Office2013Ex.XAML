<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.Window.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush x:Key="Button.Normal.Background" Color="Transparent" cs:Name="SolidColorBrush_0001" />
    <SolidColorBrush x:Key="Button.Hover.Background" Color="#FFCDE6F7" cs:Name="SolidColorBrush_0002" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF92C0E0" cs:Name="SolidColorBrush_0003" />
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonNormalBackground}">
        <dx:DXBorder Background="{StaticResource Button.Normal.Background}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
        <dx:DXBorder Background="{StaticResource Button.Hover.Background}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}">
        <dx:DXBorder Background="{StaticResource Button.Pressed.Background}" />
    </DataTemplate>
    
    <SolidColorBrush x:Key="CloseButton.Normal.Foreground" Color="#FF666666" cs:Name="SolidColorBrush_0004" />
    <SolidColorBrush x:Key="CloseButton.Hover.Foreground" Color="#FF0072C6" cs:Name="SolidColorBrush_0005" />
    <SolidColorBrush x:Key="CloseButton.Pressed.Foreground" Color="#FF0072C6" cs:Name="SolidColorBrush_0006" />
    <SolidColorBrush x:Key="ScrollButton.Normal.Foreground" Color="#FF666666" cs:Name="SolidColorBrush_0007" />
    <SolidColorBrush x:Key="ScrollButton.Hover.Foreground" Color="#FF2A8DD4" cs:Name="SolidColorBrush_0008" />
    <SolidColorBrush x:Key="ScrollButton.Pressed.Foreground" Color="#FF0072C6" cs:Name="SolidColorBrush_0009" />
    <Style x:Key="HeaderPanelButtonStyle" BasedOn="{StaticResource ButtonDefaultStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="2,0,2,0" />
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Foreground" Value="{StaticResource ScrollButton.Normal.Foreground}" />
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ScrollButton.Hover.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ScrollButton.Pressed.Foreground}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="36" />
                <Setter Property="Height" Value="36" />
                <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=6}" />
                <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="6,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}" BasedOn="{StaticResource ButtonDefaultStyle}" TargetType="{x:Type Button}">
        <Style.Resources>
            <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
                <dx:DXBorder Background="{StaticResource Button.Normal.Background}" />
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Foreground" Value="{StaticResource CloseButton.Normal.Foreground}" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Margin" Value="7,0,-3,0" />
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=-1}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource CloseButton.Hover.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource CloseButton.Pressed.Foreground}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="28" />
                <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=4}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="5,0,3,0" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="6,0,6,0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}" />
    </Style>
    
    <SolidColorBrush x:Key="TabControl.BorderBrush" Color="#FFACACAC" cs:Name="SolidColorBrush_0010" />
    <SolidColorBrush x:Key="TabControl.Background" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0011" />
    <SolidColorBrush x:Key="TabControl.Normal.BorderBrush" Color="#FFACACAC" cs:Name="SolidColorBrush_0020" />
    <LinearGradientBrush x:Key="TabItem.Normal.Background" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1535">
        <GradientStop Color="#FFF0F0F0" Offset="0" cs:Name="GradientStop_0001" />
        <GradientStop Color="#FFE5E5E5" Offset="1" cs:Name="GradientStop_0002" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.Hover.BorderBrush" Color="#FF7EB4EA" cs:Name="SolidColorBrush_0012" />
    <LinearGradientBrush x:Key="TabItem.Hover.Background" EndPoint="0.5,1" StartPoint="0.5,0" cs:Name="LinearGradientBrush_1536">
        <GradientStop Color="#FFECF4FC" Offset="0" cs:Name="GradientStop_0003" />
        <GradientStop Color="#FFDCECFC" Offset="1" cs:Name="GradientStop_0004" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItem.Focused.BorderBrush" Color="#FF0072C6" cs:Name="SolidColorBrush_0013" />
    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=Background}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabControl.Background}" BorderBrush="{StaticResource TabControl.BorderBrush}" BorderThickness="1" BorderMode="BorderBrush" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=NormalBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabItem.Normal.Background}" BorderBrush="{StaticResource TabControl.Normal.BorderBrush}" BorderThickness="1,1,1,0" BorderMargin="0,0,-1,0" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" BorderMode="BorderBrush" BackgroundMode="BorderBackground" CustomBackgroundBrightness="-0.1" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=HoverBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabItem.Hover.Background}" BorderBrush="{StaticResource TabItem.Hover.BorderBrush}" BorderThickness="1,1,1,0" BorderMargin="0,0,-1,0" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" BorderMode="BorderBrush" BackgroundMode="BorderBackground" CustomBackgroundBrightness="0.4" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=SelectedBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBackground="{StaticResource TabControl.Background}" BorderBrush="{StaticResource TabControl.BorderBrush}" BorderThickness="1,1,1,0" BorderMargin="0,-2,-1,-1" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" BorderMode="BorderBrush" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=FocusedBackground}">
        <dxcn:TabBorder ViewInfo="{Binding}" BorderBrush="{StaticResource TabItem.Focused.BorderBrush}" BorderThickness="0" HoldBorderThickness="1" HoldBorderMargin="0,0,1,1" />
    </DataTemplate>
    
    <SolidColorBrush x:Key="TabControl.Foreground" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0014" />
    <SolidColorBrush x:Key="TabItem.Normal.Foreground" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0015" />
    <SolidColorBrush x:Key="TabItem.Hover.Foreground" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0021" />
    <SolidColorBrush x:Key="TabItem.Selected.Foreground" Color="#FF3C3C3C" cs:Name="SolidColorBrush_0022" />
    <SolidColorBrush x:Key="TabItem.Focused.Foreground" Color="#FF0072C6" cs:Name="SolidColorBrush_0016" />
    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}" BasedOn="{StaticResource PanelContainerDefaultStyle}" TargetType="{x:Type dxcn:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="3,0,0,-1" />
        <Setter Property="NormalPadding" Value="0,2,1,1" />
        <Setter Property="HoldMargin" Value="0,0,-1,0" />
        <Setter Property="HoldPadding" Value="0,0,0,0" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabControl}" TargetType="{x:Type dx:DXTabControl}" BasedOn="{StaticResource TabControlDefaultStyle}">
        <Setter Property="Padding" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabItem}" TargetType="{x:Type dx:DXTabItem}" BasedOn="{StaticResource TabItemDefaultStyle}">
        <Setter Property="Padding" Value="9,3,9,3" />
        <Setter Property="Foreground" Value="{StaticResource TabItem.Normal.Foreground}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabItem.Focused.Foreground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabItem.Hover.Foreground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabItem.Selected.Foreground}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="12,8,12,8" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=SeparatorStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    
    <SolidColorBrush x:Key="Window.Border.Active.BorderBrush" Color="#FF0072C6" cs:Name="SolidColorBrush_0017" />
    <SolidColorBrush x:Key="Window.Border.InActive.BorderBrush" Color="#FF999999" cs:Name="SolidColorBrush_0018" />
    <SolidColorBrush x:Key="Window.Border.Active.Background" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0019" />
    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}">
        <dx:DXBorder x:Name="border" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}">
        <dx:DXBorder x:Name="border" BorderThickness="1" BorderBrush="{StaticResource Window.Border.Active.BorderBrush}" Background="{StaticResource Window.Border.Active.Background}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Window.Border.InActive.BorderBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}" TargetType="Panel">
        <Setter Property="Margin" Value="1" />
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}" TargetType="ContentPresenter">
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}" TargetType="Border">
        <Setter Property="Margin" Value="6,0,6,6" />
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}" TargetType="ItemsControl" BasedOn="{StaticResource DefaultButtonContainerStyle}">
        <Setter Property="Margin" Value="0,-1,6,9" />
    </Style>
    <Style x:Key="WindowButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonDefaultStyle}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="26" />
        <Setter Property="Height" Value="20" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="44" />
                <Setter Property="Height" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MinimizeButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=RestoreButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MaximizeButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}" />
    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowButtonStyle}">
        <Setter Property="Width" Value="45" />
        <Setter Property="Height" Value="20" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="44" />
                <Setter Property="Height" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>