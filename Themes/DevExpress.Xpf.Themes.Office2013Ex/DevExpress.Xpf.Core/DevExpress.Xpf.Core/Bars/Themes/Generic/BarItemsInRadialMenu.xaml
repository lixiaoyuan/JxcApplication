<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx DisableCache="True" Source="../ThemePart/RadialMenu.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Storyboard x:Key="PressStoryboard">
        <DoubleAnimation Storyboard.TargetName="BorderLine" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" To="0.25" />
    </Storyboard>    
    <Storyboard x:Key="HighlightStoryboard">
        <DoubleAnimation Storyboard.TargetName="BorderLine" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" To="1" />
    </Storyboard>
    <Storyboard x:Key="ReleaseStoryboard">
        <DoubleAnimation Storyboard.TargetName="BorderLine" Storyboard.TargetProperty="Opacity" Duration="0:0:0.34" To="0" />
    </Storyboard>

    <Storyboard x:Key="CheckStoryboard">
        <DoubleAnimation Storyboard.TargetName="CheckedBorderLine" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" To="0.5" />
    </Storyboard>
    <Storyboard x:Key="UncheckStoryboard">
        <DoubleAnimation Storyboard.TargetName="CheckedBorderLine" Storyboard.TargetProperty="Opacity" Duration="0:0:0.34" To="0" />
    </Storyboard>

    <ControlTemplate x:Key="{dxbt:BarItemThemeKey ResourceKey=ControlTemplateInRadialMenu}" TargetType="{x:Type dxb:BarItemLinkControl}">
        <dxb:RadialMenuItem x:Name="item" ContentTopPadding="32" Angle="{Binding Path=(dxb:RadialMenuItemsPanel.Angle), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
            <dxb:RadialMenuItem.Arrow>
                <Button x:Name="PART_ArrowButton" Visibility="{Binding ActualShowArrow, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter Invert=False}}" IsEnabled="{TemplateBinding ActualIsArrowEnabled}" Focusable="False">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="rootGrid" Background="{x:Null}">
                                <dxb:ArcBorder x:Name="PART_ArrowBorder" Fill="{StaticResource BarItemInRadialMenu_MenuColor}" Thickness="26" />
                                <Path Stretch="None" Fill="{StaticResource BarItemInRadialMenu_PathColor}" Data="F1 M 6,0L 1.18424e-015,6L 12,6L 6,0 Z " HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" IsHitTestVisible="False" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding ElementName=PART_ArrowBorder, Path=IsMouseOver}" Value="true">
                                    <Setter TargetName="PART_ArrowBorder" Property="Fill" Value="{StaticResource BarItemInRadialMenu_PathHover}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </dxb:RadialMenuItem.Arrow>
            <dxb:RadialMenuItem.Border>
                <Grid x:Name="borderRootGrid" Background="{x:Null}" IsEnabled="{TemplateBinding ActualIsContentEnabled}" Focusable="False">
                    <Border x:Name="Border" Background="Transparent" dxb:ArcBorder.ClipToSectorBounds="true" Focusable="False" />
                    <dxb:ArcBorder x:Name="CheckedBorderLine" Fill="{StaticResource BarItemInRadialMenu_MenuColor}" Thickness="2" TopPadding="29" IsHitTestVisible="False" Opacity="0" Focusable="False" />
                    <dxb:ArcBorder x:Name="BorderLine" Fill="{StaticResource BarItemInRadialMenu_MenuColor}" Thickness="3" TopPadding="29" IsHitTestVisible="False" Opacity="0" Focusable="False" />
                </Grid>
            </dxb:RadialMenuItem.Border>
            <dxb:RadialMenuItem.Content>
                <StackPanel x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" IsEnabled="{TemplateBinding ActualIsContentEnabled}" Focusable="False">
                    <dx:MeasurePixelSnapperContentControl Visibility="{Binding ActualShowGlyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter Invert=False}}" HorizontalAlignment="Center" ContentTemplate="{TemplateBinding ActualGlyphTemplate}" Focusable="False">
                        <dx:DXImage x:Name="Image" Source="{TemplateBinding ActualGlyph}" Stretch="None" dxb:ImageColorizer.IsEnabled="{TemplateBinding ActualAllowGlyphTheming}" dxb:ImageColorizer.Color="{DynamicResource {dxbt:RadialMenuItemThemeKey ResourceKey=NormalImageColorizeColor}}" Focusable="False" />
                    </dx:MeasurePixelSnapperContentControl>
                    <ContentControl Content="{TemplateBinding ActualContent}" Visibility="{Binding ActualShowContent, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter Invert=False}}" ContentTemplate="{TemplateBinding ActualContentTemplate}" HorizontalAlignment="Center" Focusable="False" />
                </StackPanel>
            </dxb:RadialMenuItem.Content>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">                    
                    <VisualState x:Name="CommonStates_Normal" Storyboard="{StaticResource ReleaseStoryboard}" />
                    <VisualState x:Name="CommonStates_Highlighted" Storyboard="{StaticResource HighlightStoryboard}" />
                    <VisualState x:Name="CommonStates_Pressed" Storyboard="{StaticResource PressStoryboard}" />                    
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="CheckedStates_Checked" Storyboard="{StaticResource CheckStoryboard}" />
                    <VisualState x:Name="CheckedStates_Unchecked" Storyboard="{StaticResource UncheckStoryboard}" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxb:RadialMenuItem>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="true" />
                    <Condition Property="IsMouseOver" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="dxb:VisualStateSetter.CommonGroupVisualState" Value="CommonStates_Highlighted" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_ArrowButton" Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="dxb:VisualStateSetter.CommonGroupVisualState" Value="CommonStates_Normal" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ActualIsHoverEnabled" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_ArrowButton" Property="IsMouseOver" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="dxb:VisualStateSetter.CommonGroupVisualState" Value="CommonStates_Highlighted" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ActualIsHoverEnabled" Value="true" />
                    <Condition Property="IsPressed" Value="true" />
                    <Condition SourceName="PART_ArrowButton" Property="IsMouseOver" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="dxb:VisualStateSetter.CommonGroupVisualState" Value="CommonStates_Pressed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="false" />
                    <Condition Property="IsKeyboardFocused" Value="false" />                    
                </MultiTrigger.Conditions>
                <Setter Property="dxb:VisualStateSetter.CommonGroupVisualState" Value="CommonStates_Normal" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ActualIsHoverEnabled" Value="false" />
                    <Condition Property="IsKeyboardFocused" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="dxb:VisualStateSetter.CommonGroupVisualState" Value="CommonStates_Normal" />
            </MultiTrigger>
            <Trigger Property="ActualIsChecked" Value="True">
                <Setter Property="dxb:VisualStateSetter.CheckedGroupVisualState" Value="CheckedStates_Checked" />
            </Trigger>
            <Trigger Property="ActualIsChecked" Value="False">
                <Setter Property="dxb:VisualStateSetter.CheckedGroupVisualState" Value="CheckedStates_Unchecked" />
            </Trigger>
            <Trigger Property="ActualIsArrowEnabled" Value="false">
                <Setter TargetName="PART_ArrowButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="ActualIsContentEnabled" Value="false">
                <Setter TargetName="borderRootGrid" Property="Opacity" Value="0.5" />
                <Setter TargetName="Content" Property="Opacity" Value="0.5" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>