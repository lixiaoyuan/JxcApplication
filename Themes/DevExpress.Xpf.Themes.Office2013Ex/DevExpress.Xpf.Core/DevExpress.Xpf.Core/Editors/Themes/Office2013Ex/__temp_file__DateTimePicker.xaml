<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/DateTimePicker.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="BackgroundColor" Color="#FFF0F0F0" cs:Name="SolidColorBrush_0001" />
    <SolidColorBrush x:Key="BackgroundBorderColor" Color="#FFF0F0F0" cs:Name="SolidColorBrush_0002" />
    <SolidColorBrush x:Key="ActiveBackgroundBorderColor" Color="#FFB1D6F0" cs:Name="SolidColorBrush_0003" />
    <SolidColorBrush x:Key="ActiveBackgroundColor" Color="#FFB1D6F0" cs:Name="SolidColorBrush_0004" />
    <SolidColorBrush x:Key="ActiveForegroundColor" Color="#FF000000" cs:Name="SolidColorBrush_0005" />
    <SolidColorBrush x:Key="CaptionForegroundColor" Color="#4C000000" cs:Name="SolidColorBrush_0006" />
    <SolidColorBrush x:Key="ItemsControlBackground" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0007" />
    <SolidColorBrush x:Key="ItemsControlBorderBrush" Color="#00FFFFFF" cs:Name="SolidColorBrush_0008" />
    <Color x:Key="ExpandedForegroundColor" cs:Name="Color_0001">#FF000000</Color>
    <Color x:Key="ForegroundColor" cs:Name="Color_0002">#4C000000</Color>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=YearItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=MonthItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Value, StringFormat='{}{0:MM}'}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=DayItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Hour24ItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Hour12ItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=MinuteItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=SecondItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=MillisecondItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=AmPmItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=NoneItemTemplate}" />
    <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:DateTimePickerItem}">
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="expandedStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ExpandedForegroundColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="expandedStateStoryboard" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="hiddenStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="0" />
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ForegroundColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="hiddenStateStoryboard" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="instantlyExpandedStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ExpandedForegroundColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="instantlyExpandedStateStoryboard" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="instantlyHiddenStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="0" />
                            <ColorAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="{StaticResource ForegroundColor}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="instantlyHiddenStateStoryboard" />
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
        <Grid Background="Transparent" Opacity="{Binding Path=IsFake, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" cs:Name="Grid_0001">
            <Grid x:Name="itemBackground" Margin="{TemplateBinding Padding}" Opacity="0">
                <dx:DXBorder x:Name="activeSelectedBorder" Background="{StaticResource ActiveBackgroundBorderColor}" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToDoubleConverter}}">
                    <dx:DXBorder x:Name="activeBackground" Background="{StaticResource ActiveBackgroundColor}" Margin="1" />
                </dx:DXBorder>
                <dx:DXBorder x:Name="selectedBorder" Background="{StaticResource BackgroundBorderColor}" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                    <dx:DXBorder x:Name="background" Background="{StaticResource BackgroundColor}" Margin="1" />
                </dx:DXBorder>
            </Grid>
            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}">
                <TextBlock.Foreground>
                    <SolidColorBrush x:Name="foregroundColor" Color="{StaticResource ForegroundColor}" />
                </TextBlock.Foreground>
            </ContentPresenter>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Template}">
        <ItemsControl x:Name="ItemsControl" dx:FocusHelper2.Focusable="False" Background="{StaticResource ItemsControlBackground}" BorderBrush="{StaticResource ItemsControlBorderBrush}" HorizontalAlignment="Center" VirtualizingStackPanel.VirtualizationMode="Recycling" ItemTemplate="{DynamicResource {dxet:DateTimePickerThemeKey ResourceKey=DateTimePickerItemTemplate}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=SelectorTemplate}" TargetType="{x:Type dxe:DateTimePickerSelector}">
        <Grid>
            <Grid x:Name="SelectedItemContainer" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                <dxe:DateTimePickerItem Foreground="{StaticResource ActiveForegroundColor}" Content="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=SelectedItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="True" IsActive="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" x:Name="SelectedItemContainerData" />
            </Grid>
            <Grid x:Name="pickerSelectorContainer" VerticalAlignment="Center" HorizontalAlignment="Center">
                <dxe:DXScrollViewer VerticalScrollBarVisibility="Hidden" CanContentScroll="True" VerticalSnapPointsAlignment="Near" PanningMode="None" IsDeferredScrollingEnabled="True" dx:FocusHelper2.Focusable="False" IsManipulationEnabled="False">
                    <dxe:DateTimePickerPanel x:Name="pickerPanel" />
                </dxe:DXScrollViewer>
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="selectedItemCaption" Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                    <TextBlock Margin="0,40,0,0" Text="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DateTimePickerDataCaptionConverter}}" Foreground="{StaticResource CaptionForegroundColor}" IsHitTestVisible="False" />
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>