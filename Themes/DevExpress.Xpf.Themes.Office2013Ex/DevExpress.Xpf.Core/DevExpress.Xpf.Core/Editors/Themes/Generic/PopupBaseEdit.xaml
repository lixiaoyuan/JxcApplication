<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" xmlns:help="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />

    <Style x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=ResizeGripStyle}" TargetType="{x:Type dxe:PopupSizeGrip}">
        <Setter Property="Template" Value="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=ResizeGripTemplate}}" />
    </Style>
    <!--BEGIN WPF-->
    <Style x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=NullValueButtonStyle}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
    <Style TargetType="{x:Type Button}" x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=NullValueButtonStyle}" dx:ThemeManager.SameBasedOnType="True" dx:ThemeManager.InheritedStyleSource="{StaticResource CoreDictionary}">
    ONLY SL-->
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Content" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=SetNullValue, Converter={StaticResource EditorStringIdConverter}}" />
    </Style>
    <!--BEGIN WPF-->
    <Style x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=AddNewButtonStyle}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
    <Style TargetType="{x:Type Button}" x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=AddNewButtonStyle}" dx:ThemeManager.SameBasedOnType="True" dx:ThemeManager.InheritedStyleSource="{StaticResource CoreDictionary}">
    ONLY SL-->
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Content" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpAddNew, Converter={StaticResource EditorStringIdConverter}}" />
    </Style>

    <ControlTemplate TargetType="{x:Type ContentControl}" x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=PopupBottomAreaTemplate}">
        <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter />
            <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=FooterTemplate}}" />
            <Button x:Name="PART_CloseButton" Template="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=CloseButtonTemplate}}" HorizontalAlignment="Left" VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}" Margin="3,3,0,3" Width="13" Content="Button" Height="13" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <Button.CommandParameter>
                    <dxep:PopupCloseMode>Cancel</dxep:PopupCloseMode>
                </Button.CommandParameter>
            </Button>
            <dx:UniformStackPanel Margin="15,0,15,0" ChildSpacing="0" Orientation="Horizontal" Width="Auto" HorizontalAlignment="Center">
                <Button x:Name="PART_OkButton" HorizontalAlignment="Stretch" VerticalAlignment="Center" dx:FocusHelper2.Focusable="False" Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=OK, Converter={StaticResource EditorStringIdConverter}}" Margin="3,6,3,6" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonIsEnabled, RelativeSource={RelativeSource TemplatedParent}}">
                    <Button.CommandParameter>
                        <dxep:PopupCloseMode>Normal</dxep:PopupCloseMode>
                    </Button.CommandParameter>
                </Button>
                <Button x:Name="PART_CancelButton" HorizontalAlignment="Stretch" VerticalAlignment="Center" dx:FocusHelper2.Focusable="False" Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=Cancel, Converter={StaticResource EditorStringIdConverter}}" Margin="3,6,3,6" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.CancelButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                    <Button.CommandParameter>
                        <dxep:PopupCloseMode>Cancel</dxep:PopupCloseMode>
                    </Button.CommandParameter>
                </Button>
                <Button x:Name="PART_AddNewButton" HorizontalAlignment="Left" MinWidth="80" Margin="3,6,3,6" Style="{DynamicResource ResourceKey={dxet:PopupBaseEditThemeKey ResourceKey=AddNewButtonStyle}}" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).AddNewCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.AddNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                <Button x:Name="PART_NullValueButton" HorizontalAlignment="Left" MinWidth="80" Margin="3,6,3,6" Style="{DynamicResource ResourceKey={dxet:PopupBaseEditThemeKey ResourceKey=NullValueButtonStyle}}" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).SetNullValueCommand, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.NullValueButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            </dx:UniformStackPanel>
            <dxep:PopupSizeGrip Margin="2,3,2,2" x:Name="PART_SizeGrip" dx:FocusHelper2.Focusable="False" HorizontalAlignment="Right" Style="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=ResizeGripStyle}}" VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}">
            </dxep:PopupSizeGrip>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ContentControl}" x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=PopupTopAreaStyle}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupTopAreaTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=PopupBottomAreaStyle}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupBottomAreaTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>

    <ControlTemplate TargetType="{x:Type dxep:PopupContentContainer}" x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=PopupContentContainerTemplate}">
        <Grid>
            <Grid.Resources>
                <sys:Int32 x:Key="Top">0</sys:Int32>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DropDownDirectionStates">
                    <VisualState x:Name="TopToBottomDirection" />
                    <VisualState x:Name="BottomToTopDirection">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="PART_Footer" Storyboard.TargetProperty="(Grid.Row)">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Top}" />
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="RowTopFooter" Height="Auto" />
                <RowDefinition x:Name="RowTopContent" Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition x:Name="RowBottomFooter" Height="Auto" />
            </Grid.RowDefinitions>
            <ContentControl x:Name="PART_Top" Grid.Row="1" Style="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=PopupTopAreaStyle}}">
                <!--ONLY SL
                <dxe:BaseEdit.OwnerEdit>
                    <Binding Path="(dxe:BaseEdit.OwnerEdit)" RelativeSource="{RelativeSource TemplatedParent}" />
                </dxe:BaseEdit.OwnerEdit>
                ONLY SL-->
            </ContentControl>
            <ContentPresenter Grid.Row="2" x:Name="Content" />
            <ContentControl x:Name="PART_Footer" Grid.Row="3" Style="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=PopupBottomAreaStyle}}">
                <!--ONLY SL
                <dxe:BaseEdit.OwnerEdit>
                    <Binding Path="(dxe:BaseEdit.OwnerEdit)" RelativeSource="{RelativeSource TemplatedParent}" />
                </dxe:BaseEdit.OwnerEdit>
                ONLY SL-->
            </ContentControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type dxep:PopupContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <DataTemplate x:Key="{dxet:PopupBaseEditThemeKey ResourceKey=DialogServiceContentTemplate}">
        <ContentControl Focusable="False" Content="{Binding Path=Content}" />
    </DataTemplate>

</ResourceDictionary>