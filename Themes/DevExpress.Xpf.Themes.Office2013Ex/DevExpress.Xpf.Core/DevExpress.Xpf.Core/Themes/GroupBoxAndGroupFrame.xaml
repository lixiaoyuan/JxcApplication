<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" mc:Ignorable="cs">
    <Visibility x:Key="headerCollapsed.headerGrid.Visibility">Collapsed</Visibility>
    <Thickness x:Key="HeaderCollapsed.content.Margin">12</Thickness>
    <Thickness x:Key="HeaderCollapsed.contentBorder.BorderThickness">1</Thickness>
    <Thickness x:Key="HeaderCollapsed.contentBorder.Margin">1,1,-1,-1</Thickness>
    <CornerRadius x:Key="HeaderCollapsed.contentBorder.CornerRadius">2</CornerRadius>
    <!--ONLY SL<ControlTemplate x:Key="{dxt:GroupBoxThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dx:GroupFrame}">ONLY SL-->
    <!--BEGIN WPF-->
    <ControlTemplate x:Key="{dxt:GroupBoxThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type GroupBox}">
        <!--END WPF-->
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border x:Name="contentBorder" BorderBrush="#FFD6D6D6" BorderThickness="1,0,1,1" Grid.Row="1" cs:Name="Border_0001" />
            <Grid x:Name="headerGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*" />
                    <RowDefinition Height="0.5*" />
                </Grid.RowDefinitions>
                <Border BorderBrush="#FFD6D6D6" BorderThickness="1,1,0,0" Margin="0,-1,0,0" Width="9" Grid.Row="1" cs:Name="Border_0002" />
                <dx:ContentContainer Margin="3,0,3,0" Grid.Column="1" Grid.RowSpan="2">
                    <!--BEGIN WPF-->
                    <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <!--END WPF-->
                    <!--ONLY SL <dx:DXContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Margin="3,0,3,0"  Grid.Column="1" Grid.RowSpan="2"/> ONLY SL-->
                </dx:ContentContainer>
                <Border BorderBrush="#FFD6D6D6" BorderThickness="0,1,1,0" Margin="0,-1,0,0" Grid.Column="2" Grid.Row="1" cs:Name="Border_0003" />
            </Grid>
            <!--BEGIN WPF-->
            <ContentPresenter x:Name="content" Grid.Row="1" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <!--END WPF-->
            <!--ONLY SL<dx:BackgroundPanel x:Name="content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.Row="1"/>ONLY SL-->
            <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HeaderVisibility">
                    <VisualState x:Name="HeaderVisible"/>
                    <VisualState x:Name="HeaderCollapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource headerCollapsed.headerGrid.Visibility}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentBorder" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCollapsed.contentBorder.BorderThickness}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentBorder" Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCollapsed.contentBorder.CornerRadius}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentBorder" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCollapsed.contentBorder.Margin}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCollapsed.content.Margin}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
        </Grid>
        <!--BEGIN WPF-->
        <ControlTemplate.Triggers>
            <Trigger Property="HasHeader" Value="False">
                <Setter Property="Visibility" TargetName="headerGrid" Value="{StaticResource headerCollapsed.headerGrid.Visibility}" />
                <Setter Property="BorderThickness" TargetName="contentBorder" Value="{StaticResource HeaderCollapsed.contentBorder.BorderThickness}" />
                <Setter Property="CornerRadius" TargetName="contentBorder" Value="{StaticResource HeaderCollapsed.contentBorder.CornerRadius}" />
                <Setter Property="Margin" TargetName="contentBorder" Value="{StaticResource HeaderCollapsed.contentBorder.Margin}" />
                <Setter Property="Margin" TargetName="content" Value="{StaticResource HeaderCollapsed.content.Margin}" />
            </Trigger>
        </ControlTemplate.Triggers>
        <!--END WPF-->
    </ControlTemplate>
    <!--BEGIN WPF-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.GroupBox}" TargetType="{x:Type GroupBox}">
    	<Style.Triggers>
    		<Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
    			<Setter Property="Padding" Value="18,12,18,18" />
    		</Trigger>
    	</Style.Triggers>
        <Setter Property="Template" Value="{DynamicResource {dxt:GroupBoxThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="Padding" Value="12,8,12,12" />
    </Style>
    <!--END WPF-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.GroupFrame}" TargetType="{x:Type dx:GroupFrame}">
    	<Style.Triggers>
    		<Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
    			<Setter Property="Padding" Value="18,12,18,18" />
    		</Trigger>
    	</Style.Triggers>
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxt:GroupBoxThemeKey ResourceKey=ControlTemplate}}" />
        <Setter Property="Foreground" Value="#FF3C3C3C" cs:Name="Setter_0001" />
        <Setter Property="Padding" Value="12,8,12,12" />
    </Style>
</ResourceDictionary>