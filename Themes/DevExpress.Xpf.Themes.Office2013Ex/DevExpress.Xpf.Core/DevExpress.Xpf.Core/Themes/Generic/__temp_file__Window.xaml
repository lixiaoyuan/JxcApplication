<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core">
    <dxmvvm:NumericToVisibilityConverter x:Key="NumericToVisibilityConverter" />
    
    <ControlTemplate TargetType="{x:Type dxc:DXWindow}" x:Key="DXWindowTemplate">
        <Grid x:Name="Root_Grid">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                    <ContentPresenter x:Name="PART_RootContentPresenter" DataContext="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding ActualWindowTemplate}">
                        <ContentPresenter.Content>
                            <dxc:DXWindowBackgroundPanel DataContext="{TemplateBinding DataContext}">
                                <dxc:DXWindowBackgroundPanel.ContentTemplate>
                                    <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxc:DXWindowBackgroundPanel.ContentTemplate>
                                <dxc:DXWindowBackgroundPanel.Content>
                                    <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxc:DXWindowBackgroundPanel.Content>
                            </dxc:DXWindowBackgroundPanel>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <ControlTemplate TargetType="{x:Type dxc:DXWindow}" x:Key="DXWindowEmptyTemplate">
        <Grid x:Name="Root_Grid" Height="Auto" Margin="0,0,0,0" VerticalAlignment="Stretch">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator ClipToBounds="True" x:Name="PART_WindowAdornerDecorator">
                <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" Height="Auto" Width="Auto" x:Name="PART_RootContentPresenter">
                        <ContentPresenter.Content>
                            <dx:DXBorder />
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}" TargetType="{x:Type dxc:DXWindow}">
        <Setter Property="MinHeight" Value="42" />
        
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowResizeBorderThickness}}" />
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}}" />
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}}" />
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}}" />
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}}" />
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}}" />
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}}" />
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}}" />
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}}" />
        <Setter Property="AeroWindowTemplate" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowTemplate}}" />
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowBorderSize}}" />
        <Setter Property="WindowTemplate" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerTemplate}}" />
        <Setter Property="Template" Value="{StaticResource DXWindowTemplate}" />
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Label x:Key="DefaultDXDialogContent" />
    <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="DXDialogTemplate">
        <Grid x:Name="Root_Grid">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                    <ContentPresenter x:Name="PART_RootContentPresenter" DataContext="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding ActualWindowTemplate}">
                        <ContentPresenter.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <dxc:DXWindowBackgroundPanel DataContext="{TemplateBinding DataContext}">
                                    <dxc:DXWindowBackgroundPanel.ContentTemplate>
                                        <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxc:DXWindowBackgroundPanel.ContentTemplate>
                                    <dxc:DXWindowBackgroundPanel.Content>
                                        <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxc:DXWindowBackgroundPanel.Content>
                                </dxc:DXWindowBackgroundPanel>
                                <StackPanel Orientation="Horizontal" x:Name="Footer" Margin="12" Grid.Row="2" HorizontalAlignment="Right">
                                    <Button x:Name="YesButton" IsDefault="True" Content="{dxc:DXMessageBoxStringId StringId=Yes}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" />
                                    <Button x:Name="NoButton" IsCancel="True" Content="{dxc:DXMessageBoxStringId StringId=No}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" />
                                    <Button x:Name="OkButton" IsDefault="True" Content="{dxc:DXMessageBoxStringId StringId=Ok}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" />
                                    <Button x:Name="CancelButton" IsCancel="True" Content="{dxc:DXMessageBoxStringId StringId=Cancel}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" />
                                </StackPanel>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXDialog}" TargetType="{x:Type dxc:DXDialog}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}}">
        <Setter Property="Template" Value="{StaticResource DXDialogTemplate}" />
    </Style>

    <ControlTemplate x:Key="DXDialogWindowTemplate" TargetType="{x:Type dxc:DXDialogWindow}">
        <Grid x:Name="Root_Grid">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" DataContext="{TemplateBinding DataContext}">
                        <ContentPresenter.Content>
                            <Grid>
                                <Grid.Resources>
                                    <dxmvvm:BooleanToObjectConverter x:Key="DialogFooterMarginConverter">
                                        <dxmvvm:BooleanToObjectConverter.TrueValue>
                                            <Thickness>6,12,12,12</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.TrueValue>
                                        <dxmvvm:BooleanToObjectConverter.FalseValue>
                                            <Thickness>0</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.FalseValue>
                                    </dxmvvm:BooleanToObjectConverter>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <dxc:DXWindowBackgroundPanel>
                                    <dxc:DXWindowBackgroundPanel.ContentTemplate>
                                        <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxc:DXWindowBackgroundPanel.ContentTemplate>
                                    <dxc:DXWindowBackgroundPanel.Content>
                                        <PriorityBinding>
                                            <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Source="{StaticResource DefaultDXDialogContent}" />
                                        </PriorityBinding>
                                    </dxc:DXWindowBackgroundPanel.Content>
                                </dxc:DXWindowBackgroundPanel>
                                <ItemsControl x:Name="Footer" Grid.Row="1" Focusable="False" ItemsSource="{Binding CommandButtons, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=CommandButtons.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NumericToVisibilityConverter}}" ItemsPanel="{Binding CommandButtonsPanel, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Row="1">
                                    <dxc:NonLogicalDecorator x:Name="FooterPresenter" Margin="{Binding HasFooterButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DialogFooterMarginConverter}}" />
                                </ContentControl>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <Style x:Key="DXDialogWindowCommandButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Margin" Value="6,0,0,0" />
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXDialogWindow}" TargetType="{x:Type dxc:DXDialogWindow}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}}">
        <Setter Property="Template" Value="{StaticResource DXDialogWindowTemplate}" />
        <Setter Property="CommandButtonStyle" Value="{StaticResource DXDialogWindowCommandButtonStyle}" />
        <Setter Property="CommandButtonsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="12" HorizontalAlignment="Right" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXDialogWindowTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DialogButton}" TargetType="dxc:DialogButton">
        <Setter Property="CommandButtonStyle" Value="{StaticResource DXDialogWindowCommandButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:DialogButton">
                    <Button Style="{Binding CommandButtonStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding CommandButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding ActualCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding ActualContent, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" IsDefault="{Binding ActualIsDefault, RelativeSource={RelativeSource TemplatedParent}}" IsCancel="{Binding ActualIsCancel, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DialogButtonsControl}" TargetType="dxc:DialogButtonsControl">
        <Setter Property="ItemsSource" Value="{Binding Path=(dxc:DialogButtonsControl.CommandsSource), RelativeSource={RelativeSource Self}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:DialogButtonsControl">
                    <ItemsPresenter Margin="{TemplateBinding Padding}" Visibility="{Binding HasItems, Converter={dxmvvm:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>