<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013Ex.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dx:EnumToObjectConverter x:Key="ScrollBarModeToScrollBackVisibilityConverter" DefaultValue="Visible">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:EnumToObjectConverter x:Key="ScrollBarModeToHardWidthScrollConverter" DefaultValue="Collapsed">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Standard" Value="Visible" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <Style x:Key="HorizontalScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle x:Name="PageButtonBackground" Fill="#00000000" cs:Name="Rectangle_0001" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PageButtonBackground" Property="Fill" Value="{StaticResource ScrollBar.PageButton.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle x:Name="PageButtonBackground" Fill="#00000000" cs:Name="Rectangle_0002" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PageButtonBackground" Property="Fill" Value="{StaticResource ScrollBar.PageButton.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarHorizontalButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#00000000" cs:Name="Setter_0001" />
        <Setter Property="Foreground" Value="#00000000" cs:Name="Setter_0002" />
        <Setter Property="BorderBrush" Value="#00000000" cs:Name="Setter_0003" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Border x:Name="DefaultState" Background="#00000000" BorderBrush="#00000000" BorderThickness="1" cs:Name="Border_0004" />
                        <!-- 4 Office2016 Only -->
                        <Border x:Name="HoverState" Background="{StaticResource ScrollBar.HoverState.Background}" BorderBrush="{StaticResource ScrollBar.HoverState.Border}" BorderThickness="1" Opacity="0" />
                        <Border x:Name="PressedState" Background="{StaticResource ScrollBar.DraggingState.Background}" BorderBrush="{StaticResource ScrollBar.DraggingState.Border}" BorderThickness="1" Opacity="0" />
                        <Grid Width="6" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
                            <Path x:Name="Path" Stretch="Fill" Fill="{StaticResource ScrollBar.Path.Background}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                            <Setter TargetName="Path" Property="Fill" Value="#FF000000" cs:Name="Setter_0004" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                            <Setter TargetName="Path" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0005" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="#FF606060" cs:Name="Setter_0006" />
                            <Setter TargetName="Root" Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarVerticalButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="#00000000" cs:Name="Setter_0007" />
        <Setter Property="Foreground" Value="#00000000" cs:Name="Setter_0008" />
        <Setter Property="BorderBrush" Value="#00000000" cs:Name="Setter_0009" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Border x:Name="DefaultState" Background="#00000000" BorderBrush="#00000000" BorderThickness="1" cs:Name="Border_0006" />
                        <!-- 4 Office2016 Only -->
                        <Border x:Name="HoverState" Background="{StaticResource ScrollBar.HoverState.Background}" BorderBrush="{StaticResource ScrollBar.HoverState.Border}" BorderThickness="1" Opacity="0" />
                        <Border x:Name="PressedState" Background="{StaticResource ScrollBar.DraggingState.Background}" BorderBrush="{StaticResource ScrollBar.DraggingState.Border}" BorderThickness="1" Opacity="0" />
                        <Grid Width="7" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
                            <Path x:Name="Path" Stretch="Fill" Fill="{StaticResource ScrollBar.Path.Background}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="0" />
                            <Setter TargetName="Path" Property="Fill" Value="#FF000000" cs:Name="Setter_0010" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="PressedState" Property="Opacity" Value="1" />
                            <Setter TargetName="Path" Property="Fill" Value="#FFFFFFFF" cs:Name="Setter_0011" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="#FF606060" cs:Name="Setter_0012" />
                            <Setter TargetName="Root" Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Border x:Name="DefaultState" Background="{StaticResource ScrollBar.DefaultState.Background}" BorderBrush="{StaticResource ScrollBar.DefaultState.Border}" BorderThickness="1" />
                        <Border x:Name="HoverState" Background="{StaticResource ScrollBar.HoverState.Background}" BorderBrush="{StaticResource ScrollBar.HoverState.Border}" BorderThickness="1" Opacity="0" />
                        <Border x:Name="DraggingState" Background="{StaticResource ScrollBar.DraggingState.Background}" BorderBrush="{StaticResource ScrollBar.DraggingState.Border}" BorderThickness="1" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="DraggingState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="DraggingState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="DraggingState" Property="Opacity" Value="0" />
                            <Setter TargetName="Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="MinHeight" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root" SnapsToDevicePixels="True">
                        <Grid>
                            <Border x:Name="DefaultState" Background="{StaticResource ScrollBar.DefaultState.Background}" BorderBrush="{StaticResource ScrollBar.DefaultState.Border}" BorderThickness="1" />
                            <Border x:Name="HoverState" Background="{StaticResource ScrollBar.HoverState.Background}" BorderBrush="{StaticResource ScrollBar.HoverState.Border}" BorderThickness="1" Opacity="0" />
                            <Border x:Name="DraggingState" Background="{StaticResource ScrollBar.DraggingState.Background}" BorderBrush="{StaticResource ScrollBar.DraggingState.Border}" BorderThickness="1" Opacity="0" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                            <Setter TargetName="DraggingState" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="DraggingState" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DefaultState" Property="Opacity" Value="0" />
                            <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                            <Setter TargetName="DraggingState" Property="Opacity" Value="0" />
                            <Setter TargetName="Root" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=PageButtonTouchStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" cs:Name="Setter_0014" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=ScrollThumbHorzTouchStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" Margin="1" Opacity="0.75" />
                        <Rectangle x:Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{x:Null}" StrokeThickness="1" Opacity="0.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=ScrollThumbVertTouchStyle}" TargetType="{x:Type Thumb}" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" Margin="1" Opacity="0.75" />
                        <Rectangle x:Name="border" Stroke="{TemplateBinding BorderBrush}" Fill="{x:Null}" StrokeThickness="1" Opacity="0.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=ScrollBarVertTouchTemplate}" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="Root" SnapsToDevicePixels="true" Background="{x:Null}">
            <Grid x:Name="stretchableGrid" HorizontalAlignment="Right" Width="6">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToScrollBackVisibilityConverter}}" />
                <Border x:Name="MouseHoverBorder" Background="#FF808080" Opacity="0.2" cs:Name="Border_0001">
                    <Border.Visibility>
                        <Binding Path="Width" ElementName="stretchableGrid">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultTarget="Visible">
                                    <dxmvvm:MapItem Source="6" Target="Collapsed" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Track x:Name="PART_Track" IsDirectionReversed="true" Width="6" HorizontalAlignment="Center" Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToHardWidthScrollConverter}}">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageUpCommand}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageDownCommand}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource {dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=ScrollThumbVertTouchStyle}}" x:Name="thumb" Background="#FF808080" BorderBrush="#FFFFFFFF" Opacity="1" cs:Name="Thumb_0001" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                    <Condition Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:01.5" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sb">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="16" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stretchableGrid" />
                            <DoubleAnimation To="13" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="PART_Track" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sb" />
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.35" To="6" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stretchableGrid" />
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.35" To="6" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="PART_Track" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sbSizeChanged">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sbSizeChanged" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="thumb" Property="Opacity" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate TargetType="{x:Type ScrollBar}" x:Key="{dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=ScrollBarHorzTouchTemplate}">
        <Grid x:Name="Root" SnapsToDevicePixels="true" Background="{x:Null}">
            <Grid x:Name="stretchableGrid" VerticalAlignment="Bottom" Height="6">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToScrollBackVisibilityConverter}}" />
                <Border x:Name="MouseHoverBorder" Background="#FF808080" Opacity="0.2" cs:Name="Border_0002">
                    <Border.Visibility>
                        <Binding Path="Height" ElementName="stretchableGrid">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultTarget="Visible">
                                    <dxmvvm:MapItem Source="6" Target="Collapsed" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Height="6" VerticalAlignment="Center" Visibility="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollBarModeToHardWidthScrollConverter}}">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageLeftCommand}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource {dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=PageButtonTouchStyle}}" Command="{x:Static ScrollBar.PageRightCommand}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource {dxdst:ScrollBarThemeKey ThemeName=Office2013Ex, ResourceKey=ScrollThumbHorzTouchStyle}}" Background="#FF808080" BorderBrush="#FFFFFFFF" x:Name="thumb" cs:Name="Thumb_0002" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                    <Condition Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:01.5" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sbMouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="16" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stretchableGrid" />
                            <DoubleAnimation To="13" Duration="0:0:0.15" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="PART_Track" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sbMouseOver" />
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.5" To="6" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stretchableGrid" />
                            <DoubleAnimation BeginTime="0:0:0.5" Duration="0:0:0.5" To="6" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="PART_Track" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="sbSizeChanged">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_Track">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sbSizeChanged" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxdst:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFF0F0F0" cs:Name="Setter_0013" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.ScrollBar}" TargetType="{x:Type ScrollBar}">
        <!--BEGIN WPF-->
        <Setter Property="dx:ScrollBarExtensions.ListeningScrollBarThumbDragDelta" Value="True" />
        <Setter Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerMouseMoved), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerSizeChanged), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="dx:ScrollBarExtensions.IsTouchScrollBarMode">
            <Setter.Value>
                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="True">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Standard" Value="False" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <!--END WPF-->
        <Setter Property="Background" Value="{StaticResource ScrollBar.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="17" />
        <Setter Property="MinWidth" Value="14" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="RepeatButtonUp" Command="{x:Static ScrollBar.LineUpCommand}" Content="{StaticResource UpArrowGeometry}" Style="{StaticResource ScrollBarVerticalButtonStyle}" Grid.Row="0" />
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="RepeatButtonDown" Command="{x:Static ScrollBar.LineDownCommand}" Content="{StaticResource DownArrowGeometry}" Style="{StaticResource ScrollBarVerticalButtonStyle}" Grid.Row="2" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Vertical" />
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="16" />
                    <Setter Property="MinWidth" Value="16" />
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarVertTouchTemplate}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal" />
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource ScrollBar.Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.BorderBrush}" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="17" />
                    <Setter Property="MinHeight" Value="14" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                            <ColumnDefinition Width="0.00001*" />
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton x:Name="RepeatButtonLeft" Command="{x:Static ScrollBar.LineLeftCommand}" Content="{StaticResource LeftArrowGeometry}" Style="{StaticResource ScrollBarHorizontalButtonStyle}" Grid.Column="0" />
                                        <Track Grid.Column="1" x:Name="PART_Track">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButtonStyle}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButtonStyle}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="RepeatButtonRight" Style="{StaticResource ScrollBarHorizontalButtonStyle}" Command="{x:Static ScrollBar.LineRightCommand}" Content="{StaticResource RightArrowGeometry}" Grid.Column="2" />
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal" />
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource ScrollBar.Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.BorderBrush}" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="MinHeight" Value="16" />
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarHorzTouchTemplate}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>